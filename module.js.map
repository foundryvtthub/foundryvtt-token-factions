{"version":3,"file":"module.js","sources":["src/scripts/constants.mjs","src/scripts/lib/lib.mjs","src/scripts/settings.mjs","src/scripts/TokenFactionsModels.mjs","src/scripts/tokenFactions.mjs","src/scripts/api.mjs","src/scripts/module.mjs","src/main.mjs"],"sourcesContent":["const CONSTANTS = {\r\n\tMODULE_NAME: \"token-factions\",\r\n\tPATH: `modules/token-factions/`\r\n};\r\n\r\nCONSTANTS.PATH = `modules/${CONSTANTS.MODULE_NAME}/`;\r\n\r\nexport default CONSTANTS;\r\n","import CONSTANTS from \"../constants.mjs\";\n\n// =============================\n// Module Generic function\n// =============================\n\nexport function isGMConnected() {\n\treturn Array.from(game.users).find((user) => user.isGM && user.active) ? true : false;\n}\n\nexport function wait(ms) {\n\treturn new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n// export let debugEnabled = 0;\n// 0 = none, warnings = 1, debug = 2, all = 3\n\nexport function debug(msg, args = \"\") {\n\tif (game.settings.get(CONSTANTS.MODULE_NAME, \"debug\")) {\n\t\tconsole.log(`DEBUG | ${CONSTANTS.MODULE_NAME} | ${msg}`, args);\n\t}\n\treturn msg;\n}\n\nexport function log(message) {\n\tmessage = `${CONSTANTS.MODULE_NAME} | ${message}`;\n\tconsole.log(message.replace(\"<br>\", \"\\n\"));\n\treturn message;\n}\n\nexport function notify(message) {\n\tmessage = `${CONSTANTS.MODULE_NAME} | ${message}`;\n\tui.notifications?.notify(message);\n\tconsole.log(message.replace(\"<br>\", \"\\n\"));\n\treturn message;\n}\n\nexport function info(info, notify = false) {\n\tinfo = `${CONSTANTS.MODULE_NAME} | ${info}`;\n\tif (notify) ui.notifications?.info(info);\n\tconsole.log(info.replace(\"<br>\", \"\\n\"));\n\treturn info;\n}\n\nexport function warn(warning, notify = false) {\n\twarning = `${CONSTANTS.MODULE_NAME} | ${warning}`;\n\tif (notify) ui.notifications?.warn(warning);\n\tconsole.warn(warning.replace(\"<br>\", \"\\n\"));\n\treturn warning;\n}\n\nexport function error(error, notify = true) {\n\terror = `${CONSTANTS.MODULE_NAME} | ${error}`;\n\tif (notify) ui.notifications?.error(error);\n\treturn new Error(error.replace(\"<br>\", \"\\n\"));\n}\n\nexport function timelog(message) {\n\twarn(Date.now(), message);\n}\n\nexport const i18n = (key) => {\n\treturn game.i18n.localize(key)?.trim();\n};\n\nexport const i18nFormat = (key, data = {}) => {\n\treturn game.i18n.format(key, data)?.trim();\n};\n\n// export const setDebugLevel = (debugText) => {\n//   debugEnabled = { none: 0, warn: 1, debug: 2, all: 3 }[debugText] || 0;\n//   // 0 = none, warnings = 1, debug = 2, all = 3\n//   if (debugEnabled >= 3) CONFIG.debug.hooks = true;\n// };\n\nexport function dialogWarning(message, icon = \"fas fa-exclamation-triangle\") {\n\treturn `<p class=\"${CONSTANTS.MODULE_NAME}-dialog\">\n          <i style=\"font-size:3rem;\" class=\"${icon}\"></i><br><br>\n          <strong style=\"font-size:1.2rem;\">${CONSTANTS.MODULE_NAME}</strong>\n          <br><br>${message}\n      </p>`;\n}\n\nexport function cleanUpString(stringToCleanUp) {\n\t// regex expression to match all non-alphanumeric characters in string\n\tconst regex = /[^A-Za-z0-9]/g;\n\tif (stringToCleanUp) {\n\t\treturn i18n(stringToCleanUp).replace(regex, \"\").toLowerCase();\n\t} else {\n\t\treturn stringToCleanUp;\n\t}\n}\n\nexport function isStringEquals(stringToCheck1, stringToCheck2, startsWith = false) {\n\tif (stringToCheck1 && stringToCheck2) {\n\t\tconst s1 = cleanUpString(stringToCheck1) ?? \"\";\n\t\tconst s2 = cleanUpString(stringToCheck2) ?? \"\";\n\t\tif (startsWith) {\n\t\t\treturn s1.startsWith(s2) || s2.startsWith(s1);\n\t\t} else {\n\t\t\treturn s1 === s2;\n\t\t}\n\t} else {\n\t\treturn stringToCheck1 === stringToCheck2;\n\t}\n}\n/*\nexport function buildButton(html, tooltip, iconClass) {\n  const iconClass = 'fas fa-wind'; // TODO customize icon ???\n  const button = $(\n    `<div class=\"control-icon ${CONSTANTS.MODULE_NAME}\" title=\"${tooltip}\"><i class=\"${iconClass}\"></i></div>`,\n  );\n  const settingHudColClass = <string>game.settings.get(CONSTANTS.MODULE_NAME, 'hudColumn') ?? 'left';\n  const settingHudTopBottomClass = <string>game.settings.get(CONSTANTS.MODULE_NAME, 'hudTopBottom') ?? 'top';\n\n  const buttonPos = '.' + settingHudColClass.toLowerCase();\n\n  const col = html.find(buttonPos);\n  if (settingHudTopBottomClass.toLowerCase() === 'top') {\n    col.prepend(button);\n  } else {\n    col.append(button);\n  }\n  return button;\n}\n*/\nexport function getOwnedTokens(priorityToControlledIfGM) {\n\tconst gm = game.user?.isGM;\n\tif (gm) {\n\t\tif (priorityToControlledIfGM) {\n\t\t\tconst arr = canvas.tokens?.controlled;\n\t\t\tif (arr && arr.length > 0) {\n\t\t\t\treturn arr;\n\t\t\t} else {\n\t\t\t\treturn canvas.tokens?.placeables;\n\t\t\t}\n\t\t} else {\n\t\t\treturn canvas.tokens?.placeables;\n\t\t}\n\t}\n\tif (priorityToControlledIfGM) {\n\t\tconst arr = canvas.tokens?.controlled;\n\t\tif (arr && arr.length > 0) {\n\t\t\treturn arr;\n\t\t}\n\t}\n\tlet ownedTokens = canvas.tokens?.placeables.filter((token) => token.isOwner && (!token.data.hidden || gm));\n\tif (ownedTokens.length === 0 || !canvas.tokens?.controlled[0]) {\n\t\townedTokens = (\n\t\t\tcanvas.tokens?.placeables.filter((token) => (token.observer || token.isOwner) && (!token.data.hidden || gm))\n\t\t);\n\t}\n\treturn ownedTokens;\n}\n\nexport function performLOSTest(sourceToken, token, source) {\n\treturn advancedLosTestVisibility(sourceToken, token, source);\n}\n\nfunction advancedLosTestVisibility(sourceToken, token, source) {\n\tconst angleTest = testInAngle(sourceToken, token);\n\tif (!angleTest) return false;\n\treturn !advancedLosTestInLos(sourceToken, token);\n\tconst inLOS = !advancedLosTestInLos(sourceToken, token);\n\tif (sourceToken.vision.los === source) return inLOS;\n\tconst inRange = tokenInRange(sourceToken, token);\n\tif (inLOS && inRange) return true;\n\treturn false;\n}\n\nexport function advancedLosTestInLos(sourceToken, token) {\n\tconst tol = 4;\n\t//@ts-ignore\n\tif (CONFIG.Levels && CONFIG.Levels.settings.get(\"preciseTokenVisibility\") === false)\n\t\treturn checkCollision(sourceToken, token, \"sight\");\n\tconst targetLOSH = token.losHeight;\n\tconst targetElevation = token.document.elevation + (targetLOSH - token.document.elevation) * 0.1;\n\tconst sourceCenter = {\n\t\tx: sourceToken.center.x,\n\t\ty: sourceToken.center.y,\n\t\tz: sourceToken.losHeight\n\t};\n\tconst tokenCorners = [\n\t\t{ x: token.center.x, y: token.center.y, z: targetLOSH },\n\t\t{ x: token.x + tol, y: token.y + tol, z: targetLOSH },\n\t\t{ x: token.x + token.w - tol, y: token.y + tol, z: targetLOSH },\n\t\t{ x: token.x + tol, y: token.y + token.h - tol, z: targetLOSH },\n\t\t{ x: token.x + token.w - tol, y: token.y + token.h - tol, z: targetLOSH }\n\t];\n\t//@ts-ignore\n\tif (CONFIG.Levels && CONFIG.Levels.settings.get(\"exactTokenVisibility\")) {\n\t\tconst exactPoints = [\n\t\t\t{\n\t\t\t\tx: token.center.x,\n\t\t\t\ty: token.center.y,\n\t\t\t\tz: targetElevation + (targetLOSH - targetElevation) / 2\n\t\t\t},\n\t\t\t{ x: token.center.x, y: token.center.y, z: targetElevation },\n\t\t\t{ x: token.x + tol, y: token.y + tol, z: targetElevation },\n\t\t\t{ x: token.x + token.w - tol, y: token.y + tol, z: targetElevation },\n\t\t\t{ x: token.x + tol, y: token.y + token.h - tol, z: targetElevation },\n\t\t\t{\n\t\t\t\tx: token.x + token.w - tol,\n\t\t\t\ty: token.y + token.h - tol,\n\t\t\t\tz: targetElevation\n\t\t\t}\n\t\t];\n\t\ttokenCorners.push(...exactPoints);\n\t}\n\tfor (let point of tokenCorners) {\n\t\tlet collision = testCollision(sourceCenter, point, \"sight\");\n\t\tif (!collision) return collision;\n\t}\n\treturn true;\n}\n\nfunction testInAngle(sourceToken, token) {\n\tconst documentAngle = sourceToken.document?.sight?.angle ?? sourceToken.document?.config?.angle;\n\tif (documentAngle == 360) return true;\n\n\t//normalize angle\n\tfunction normalizeAngle(angle) {\n\t\tlet normalized = angle % (Math.PI * 2);\n\t\tif (normalized < 0) normalized += Math.PI * 2;\n\t\treturn normalized;\n\t}\n\n\t//check angled vision\n\tconst angle = normalizeAngle(\n\t\tMath.atan2(token.center.y - sourceToken.center.y, token.center.x - sourceToken.center.x)\n\t);\n\tconst rotation = (((sourceToken.document.rotation + 90) % 360) * Math.PI) / 180;\n\tconst end = normalizeAngle(rotation + (documentAngle * Math.PI) / 180 / 2);\n\tconst start = normalizeAngle(rotation - (documentAngle * Math.PI) / 180 / 2);\n\tif (start > end) return angle >= start || angle <= end;\n\treturn angle >= start && angle <= end;\n}\n\nfunction tokenInRange(sourceToken, token) {\n\tconst range = sourceToken.vision.radius;\n\tif (range === 0) return false;\n\tif (range === Infinity) return true;\n\tconst tokensSizeAdjust = (Math.min(token.w, token.h) || 0) / Math.SQRT2;\n\tconst dist =\n\t\t(getUnitTokenDist(sourceToken, token) * canvas.dimensions?.size) / canvas.dimensions?.distance -\n\t\ttokensSizeAdjust;\n\treturn dist <= range;\n}\n\nfunction getUnitTokenDist(token1, token2) {\n\tconst unitsToPixel = canvas.dimensions?.size / canvas.dimensions?.distance;\n\tconst x1 = token1.center.x;\n\tconst y1 = token1.center.y;\n\tconst z1 = token1.losHeight * unitsToPixel;\n\tconst x2 = token2.center.x;\n\tconst y2 = token2.center.y;\n\tconst z2 = token2.losHeight * unitsToPixel;\n\n\tconst d = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2)) / unitsToPixel;\n\treturn d;\n}\n\n/**\n * Check whether the given wall should be tested for collisions, based on the collision type and wall configuration\n * @param {Object} wall - The wall being checked\n * @param {Integer} collisionType - The collision type being checked: 0 for sight, 1 for movement\n * @returns {boolean} Whether the wall should be ignored\n */\nfunction shouldIgnoreWall(wall, collisionType) {\n\tif (collisionType === 0) {\n\t\treturn (\n\t\t\twall.document.sight === CONST.WALL_SENSE_TYPES.NONE || (wall.document.door != 0 && wall.document.ds === 1)\n\t\t);\n\t} else if (collisionType === 1) {\n\t\treturn (\n\t\t\twall.document.move === CONST.WALL_MOVEMENT_TYPES.NONE || (wall.document.door != 0 && wall.document.ds === 1)\n\t\t);\n\t}\n\treturn false;\n}\n\n/**\n * Perform a collision test between 2 point in 3D space\n * @param {Object} p0 - a point in 3d space {x:x,y:y,z:z} where z is the elevation\n * @param {Object} p1 - a point in 3d space {x:x,y:y,z:z} where z is the elevation\n * @param {String} type - \"sight\" or \"collision\" (defaults to \"sight\")\n * @returns {Boolean} returns the collision point if a collision is detected, flase if it's not\n **/\nfunction testCollision(p0, p1, type = \"sight\") {\n\t//@ts-ignore\n\tif (canvas?.scene?.flags[\"levels-3d-preview\"]?.object3dSight) {\n\t\t//@ts-ignore\n\t\tif (!game.Levels3DPreview?._active) return true;\n\t\t//@ts-ignore\n\t\treturn game.Levels3DPreview.interactionManager.computeSightCollision(p0, p1);\n\t}\n\t//Declare points adjusted with token height to use in the loop\n\tconst x0 = p0.x;\n\tconst y0 = p0.y;\n\tconst z0 = p0.z;\n\tconst x1 = p1.x;\n\tconst y1 = p1.y;\n\tconst z1 = p1.z;\n\tconst TYPE = type == \"sight\" ? 0 : 1;\n\t//If the point are on the same Z axis return the 3d wall test\n\tif (z0 == z1) {\n\t\treturn walls3dTest.bind(this)();\n\t}\n\n\t//Check the background for collisions\n\t//@ts-ignore\n\tconst bgElevation = canvas?.scene?.flags?.levels?.backgroundElevation ?? 0;\n\tconst zIntersectionPointBG = getPointForPlane(bgElevation);\n\tif ((z0 < bgElevation && bgElevation < z1) || (z1 < bgElevation && bgElevation < z0)) {\n\t\treturn {\n\t\t\tx: zIntersectionPointBG.x,\n\t\t\ty: zIntersectionPointBG.y,\n\t\t\tz: bgElevation\n\t\t};\n\t}\n\n\t//Loop through all the planes and check for both ceiling and floor collision on each tile\n\t//@ts-ignore\n\tfor (let tile of canvas.tiles?.placeables) {\n\t\tif (tile.document.flags?.levels?.noCollision) continue;\n\t\tconst bottom = tile.document.flags?.levels?.rangeBottom ?? -Infinity;\n\t\tconst top = tile.document.flags?.levels?.rangeTop ?? Infinity;\n\t\tif (bottom != -Infinity) {\n\t\t\tconst zIntersectionPoint = getPointForPlane(bottom);\n\t\t\tif (\n\t\t\t\t((z0 < bottom && bottom < z1) || (z1 < bottom && bottom < z0)) &&\n\t\t\t\ttile.containsPixel(zIntersectionPoint.x, zIntersectionPoint.y, 0.99)\n\t\t\t) {\n\t\t\t\treturn {\n\t\t\t\t\tx: zIntersectionPoint.x,\n\t\t\t\t\ty: zIntersectionPoint.y,\n\t\t\t\t\tz: bottom\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t//Return the 3d wall test if no collisions were detected on the Z plane\n\treturn walls3dTest.bind(this)();\n\n\t//Get the intersection point between the ray and the Z plane\n\tfunction getPointForPlane(z) {\n\t\tconst x = ((z - z0) * (x1 - x0) + x0 * z1 - x0 * z0) / (z1 - z0);\n\t\tconst y = ((z - z0) * (y1 - y0) + z1 * y0 - z0 * y0) / (z1 - z0);\n\t\tconst point = { x: x, y: y };\n\t\treturn point;\n\t}\n\t//Check if a point in 2d space is betweeen 2 points\n\tfunction isBetween(a, b, c) {\n\t\t//test\n\t\t//return ((a.x<=c.x && c.x<=b.x && a.y<=c.y && c.y<=b.y) || (a.x>=c.x && c.x >=b.x && a.y>=c.y && c.y >=b.y))\n\n\t\tconst dotproduct = (c.x - a.x) * (b.x - a.x) + (c.y - a.y) * (b.y - a.y);\n\t\tif (dotproduct < 0) return false;\n\n\t\tconst squaredlengthba = (b.x - a.x) * (b.x - a.x) + (b.y - a.y) * (b.y - a.y);\n\t\tif (dotproduct > squaredlengthba) return false;\n\n\t\treturn true;\n\t}\n\t//Get wall heights flags, avoid infinity, use arbitrary large number instead\n\tfunction getWallHeightRange3Dcollision(wall) {\n\t\t//@ts-ignore\n\t\tlet { top, bottom } = getWallBounds(wall); // WallHeight\n\t\tif (bottom == -Infinity) bottom = -1e9;\n\t\tif (top == Infinity) top = 1e9;\n\t\tlet wallRange = [bottom, top];\n\t\tif (!wallRange[0] && !wallRange[1]) return false;\n\t\telse return wallRange;\n\t}\n\t//Compute 3d collision for walls\n\tfunction walls3dTest() {\n\t\tconst rectX = Math.min(x0, x1);\n\t\tconst rectY = Math.min(y0, y1);\n\t\tconst rectW = Math.abs(x1 - x0);\n\t\tconst rectH = Math.abs(y1 - y0);\n\t\tconst rect = new PIXI.Rectangle(rectX, rectY, rectW, rectH);\n\t\t//@ts-ignore\n\t\tconst walls = canvas.walls.quadtree.getObjects(rect);\n\t\tlet terrainWalls = 0;\n\t\tfor (let wall of walls) {\n\t\t\tif (shouldIgnoreWall(wall, TYPE)) continue;\n\t\t\t//@ts-ignore\n\t\t\tlet isTerrain = TYPE === 0 && wall.document.sight === CONST.WALL_SENSE_TYPES.LIMITED;\n\n\t\t\t//declare points in 3d space of the rectangle created by the wall\n\t\t\tconst wallBotTop = getWallHeightRange3Dcollision(wall);\n\t\t\t//@ts-ignore\n\t\t\tconst wx1 = wall.document.c[0];\n\t\t\t//@ts-ignore\n\t\t\tconst wx2 = wall.document.c[2];\n\t\t\t//@ts-ignore\n\t\t\tconst wx3 = wall.document.c[2];\n\t\t\t//@ts-ignore\n\t\t\tconst wy1 = wall.document.c[1];\n\t\t\t//@ts-ignore\n\t\t\tconst wy2 = wall.document.c[3];\n\t\t\t//@ts-ignore\n\t\t\tconst wy3 = wall.document.c[3];\n\t\t\tconst wz1 = wallBotTop[0];\n\t\t\tconst wz2 = wallBotTop[0];\n\t\t\tconst wz3 = wallBotTop[1];\n\n\t\t\t//calculate the parameters for the infinite plane the rectangle defines\n\t\t\tconst A = wy1 * (wz2 - wz3) + wy2 * (wz3 - wz1) + wy3 * (wz1 - wz2);\n\t\t\tconst B = wz1 * (wx2 - wx3) + wz2 * (wx3 - wx1) + wz3 * (wx1 - wx2);\n\t\t\tconst C = wx1 * (wy2 - wy3) + wx2 * (wy3 - wy1) + wx3 * (wy1 - wy2);\n\t\t\tconst D = -wx1 * (wy2 * wz3 - wy3 * wz2) - wx2 * (wy3 * wz1 - wy1 * wz3) - wx3 * (wy1 * wz2 - wy2 * wz1);\n\n\t\t\t//solve for p0 p1 to check if the points are on opposite sides of the plane or not\n\t\t\tconst P1 = A * x0 + B * y0 + C * z0 + D;\n\t\t\tconst P2 = A * x1 + B * y1 + C * z1 + D;\n\n\t\t\t//don't do anything else if the points are on the same side of the plane\n\t\t\tif (P1 * P2 > 0) continue;\n\n\t\t\t//Check for directional walls\n\n\t\t\tif (wall.direction !== null) {\n\t\t\t\t// Directional walls where the ray angle is not in the same hemisphere\n\t\t\t\tconst rayAngle = Math.atan2(y1 - y0, x1 - x0);\n\t\t\t\tconst angleBounds = [rayAngle - Math.PI / 2, rayAngle + Math.PI / 2];\n\t\t\t\t//@ts-ignore\n\t\t\t\tif (!wall.isDirectionBetweenAngles(...angleBounds)) continue;\n\t\t\t}\n\n\t\t\t//calculate intersection point\n\t\t\tconst t = -(A * x0 + B * y0 + C * z0 + D) / (A * (x1 - x0) + B * (y1 - y0) + C * (z1 - z0)); //-(A*x0 + B*y0 + C*z0 + D) / (A*x1 + B*y1 + C*z1)\n\t\t\tconst ix = x0 + (x1 - x0) * t;\n\t\t\tconst iy = y0 + (y1 - y0) * t;\n\t\t\tconst iz = Math.round(z0 + (z1 - z0) * t);\n\n\t\t\t//return true if the point is inisde the rectangle\n\t\t\tconst isb = isBetween({ x: wx1, y: wy1 }, { x: wx2, y: wy2 }, { x: ix, y: iy });\n\t\t\tif (isTerrain && isb && iz <= wallBotTop[1] && iz >= wallBotTop[0] && terrainWalls == 0) {\n\t\t\t\tterrainWalls++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (isb && iz <= wallBotTop[1] && iz >= wallBotTop[0]) return { x: ix, y: iy, z: iz };\n\t\t}\n\t\treturn false;\n\t}\n}\n\n/**\n * Perform a collision test between 2 TOKENS in 3D space\n * @param {Object} token1 - a point in 3d space {x:x,y:y,z:z} where z is the elevation\n * @param {Object} token2 - a point in 3d space {x:x,y:y,z:z} where z is the elevation\n * @param {String} type - \"sight\" or \"collision\" (defaults to \"sight\")\n * @returns {Boolean} returns the collision point if a collision is detected, flase if it's not\n **/\n\nfunction checkCollision(token1, token2, type = \"sight\") {\n\tconst token1LosH = token1.losHeight;\n\tconst token2LosH = token2.losHeight;\n\tconst p0 = {\n\t\tx: token1.center.x,\n\t\ty: token1.center.y,\n\t\tz: token1LosH\n\t};\n\tconst p1 = {\n\t\tx: token2.center.x,\n\t\ty: token2.center.y,\n\t\tz: token2LosH\n\t};\n\treturn testCollision(p0, p1, type);\n}\n\nfunction getWallBounds(wall) {\n\tif (wall.document) wall = wall.document;\n\tconst top = wall.flags[\"wall-height\"]?.[\"top\"] ?? Infinity;\n\tconst bottom = wall.flags[\"wall-height\"]?.[\"bottom\"] ?? -Infinity;\n\treturn { top, bottom };\n}\n","import { debug, log, warn, i18n } from \"./lib/lib.mjs\";\nimport CONSTANTS from \"./constants.mjs\";\n\nexport const registerSettings = function () {\n\tgame.settings.registerMenu(CONSTANTS.MODULE_NAME, \"resetAllSettings\", {\n\t\tname: `${CONSTANTS.MODULE_NAME}.setting.reset.name`,\n\t\thint: `${CONSTANTS.MODULE_NAME}.setting.reset.hint`,\n\t\ticon: \"fas fa-coins\",\n\t\ttype: ResetSettingsDialog,\n\t\trestricted: true\n\t});\n\n\t// =====================================================================\n\n\t// ==========================\n\t// TOKEN FACTIONS\n\t// ==========================\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"tokenFactionsEnabled\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.tokenFactionsEnabled.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.tokenFactionsEnabled.hint\"),\n\t\tdefault: true,\n\t\ttype: Boolean,\n\t\tscope: \"world\",\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"color-from\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.color-from.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.color-from.hint\"),\n\t\tscope: \"world\",\n\t\tconfig: true,\n\t\tdefault: \"token-disposition\",\n\t\ttype: String,\n\t\tchoices: {\n\t\t\t\"token-disposition\": i18n(CONSTANTS.MODULE_NAME + \".setting.color-from.opt.token-disposition\"),\n\t\t\t\"actor-folder-color\": i18n(CONSTANTS.MODULE_NAME + \".setting.color-from.opt.actor-folder-color\")\n\t\t\t// \"custom-disposition\": i18n(CONSTANTS.MODULE_NAME + \".setting.color-from.opt.custom-disposition\")\n\t\t}\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"base-opacity\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.base-opacity.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.base-opacity.hint\"),\n\t\tscope: \"world\",\n\t\tconfig: true,\n\t\tdefault: 0.5,\n\t\ttype: Number,\n\t\t//@ts-ignore\n\t\trange: {\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\tstep: 0.05\n\t\t}\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"fillTexture\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.fillTexture.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.fillTexture.hint\"),\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t\tconfig: true\n\t});\n\n\t// game.settings.register(CONSTANTS.MODULE_NAME, 'overrideBorderGraphic', {\n\t//   name: i18n(CONSTANTS.MODULE_NAME + '.setting.overrideBorderGraphic.name'),\n\t//   hint: i18n(CONSTANTS.MODULE_NAME + '.setting.overrideBorderGraphic.hint'),\n\t//   scope: 'world',\n\t//   type: Boolean,\n\t//   default: false,\n\t//   config: true,\n\t// });\n\n\t// ===============================\n\t// SUB FEATURE STANDARD\n\t// ===============================\n\n\t// game.settings.register(CONSTANTS.MODULE_NAME, 'pixiFactionsEnabled', {\n\t//   name: i18n(CONSTANTS.MODULE_NAME + '.setting.pixiFactionsEnabled.name'),\n\t//   hint: i18n(CONSTANTS.MODULE_NAME + '.setting.pixiFactionsEnabled.hint'),\n\t//   scope: 'world',\n\t//   type: Boolean,\n\t//   default: false,\n\t//   config: true,\n\t// });\n\n\t// game.settings.register(CONSTANTS.MODULE_NAME, 'draw-frames-by-default', {\n\t//   name: i18n(CONSTANTS.MODULE_NAME + '.setting.draw-frames-by-default.name'),\n\t//   hint: i18n(CONSTANTS.MODULE_NAME + '.setting.draw-frames-by-default.hint'),\n\t//   scope: 'world',\n\t//   config: true,\n\t//   default: true,\n\t//   type: Boolean,\n\t// });\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"frame-style\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.frame-style.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.frame-style.hint\"),\n\t\tscope: \"world\",\n\t\tconfig: true,\n\t\tdefault: \"flat\",\n\t\ttype: String,\n\t\tchoices: {\n\t\t\tflat: i18n(CONSTANTS.MODULE_NAME + \".setting.frame-style.opt.flat\"),\n\t\t\tbeveled: i18n(CONSTANTS.MODULE_NAME + \".setting.frame-style.opt.beveled\")\n\t\t\t// border: i18n(CONSTANTS.MODULE_NAME + '.setting.frame-style.opt.border'),\n\t\t}\n\t});\n\n\t// game.settings.register(CONSTANTS.MODULE_NAME, 'frame-width', {\n\t//   name: i18n(CONSTANTS.MODULE_NAME + '.setting.frame-width.name'),\n\t//   hint: i18n(CONSTANTS.MODULE_NAME + '.setting.frame-width.hint'),\n\t//   scope: 'world',\n\t//   config: true,\n\t//   default: 7.5,\n\t//   type: Number,\n\t//   //@ts-ignore\n\t//   range: {\n\t//     min: 0,\n\t//     max: 10,\n\t//     step: 0.5,\n\t//   },\n\t// });\n\n\t// TODO MOVE THIS FOR BOTH THE FEATURE ????\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"frame-opacity\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.frame-opacity.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.frame-opacity.hint\"),\n\t\tscope: \"world\",\n\t\tconfig: true,\n\t\tdefault: 1,\n\t\ttype: Number,\n\t\t//@ts-ignore\n\t\trange: {\n\t\t\tmin: 0,\n\t\t\tmax: 1,\n\t\t\tstep: 0.05\n\t\t}\n\t});\n\n\t// ===============================\n\t// SUB FEATURE ALTERNATIVE BORDER\n\t// ===============================\n\n\t// game.settings.register(CONSTANTS.MODULE_NAME, 'borderFactionsEnabled', {\n\t//   name: i18n(CONSTANTS.MODULE_NAME + '.setting.borderFactionsEnabled.name'),\n\t//   hint: i18n(CONSTANTS.MODULE_NAME + '.setting.borderFactionsEnabled.hint'),\n\t//   scope: 'world',\n\t//   type: Boolean,\n\t//   default: true,\n\t//   config: true,\n\t// });\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"removeBorders\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.removeBorders.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.removeBorders.hint\"),\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tchoices: {\n\t\t\t0: \"None\",\n\t\t\t1: \"Non Owned\",\n\t\t\t2: \"All\"\n\t\t},\n\t\tdefault: \"0\",\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"permanentBorder\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.permanentBorder.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.permanentBorder.hint\"),\n\t\tdefault: false,\n\t\ttype: Boolean,\n\t\tscope: \"world\",\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"borderWidth\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.borderWidth.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.borderWidth.hint\"),\n\t\tscope: \"world\",\n\t\ttype: Number,\n\t\tdefault: 4,\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"borderGridScale\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.borderGridScale.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.borderGridScale.hint\"),\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"borderOffset\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.borderOffset.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.borderOffset.hint\"),\n\t\tscope: \"world\",\n\t\ttype: Number,\n\t\tdefault: 0,\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"circleBorders\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.circleBorders.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.circleBorders.hint\"),\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"scaleBorder\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.scaleBorder.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.scaleBorder.hint\"),\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"hudEnable\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.hudEnable.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.hudEnable.hint\"),\n\t\tscope: \"world\",\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t\tconfig: true\n\t});\n\n\t/** Which column should the button be placed on */\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"hudColumn\", {\n\t\tname: i18n(`${CONSTANTS.MODULE_NAME}.setting.hudColumn.name`),\n\t\thint: i18n(`${CONSTANTS.MODULE_NAME}.setting.hudColumn.hint`),\n\t\tscope: \"world\",\n\t\tconfig: true,\n\t\ttype: String,\n\t\tdefault: \"Right\",\n\t\tchoices: {\n\t\t\tLeft: \"Left\",\n\t\t\tRight: \"Right\"\n\t\t}\n\t});\n\n\t/** Whether the button should be placed on the top or bottom of the column */\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"hudTopBottom\", {\n\t\tname: i18n(`${CONSTANTS.MODULE_NAME}.setting.hudTopBottom.name`),\n\t\thint: i18n(`${CONSTANTS.MODULE_NAME}.setting.hudTopBottom.hint`),\n\t\tscope: \"world\",\n\t\tconfig: true,\n\t\ttype: String,\n\t\tdefault: \"Bottom\",\n\t\tchoices: {\n\t\t\tTop: \"Top\",\n\t\t\tBottom: \"Bottom\"\n\t\t}\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"controlledColor\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.controlledColor.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.controlledColor.hint\"),\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tdefault: \"#FF9829\",\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"controlledColorEx\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.controlledColorEx.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.controlledColorEx.hint\"),\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tdefault: \"#000000\",\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"hostileColor\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.hostileColor.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.hostileColor.hint\"),\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tdefault: \"#E72124\",\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"hostileColorEx\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.hostileColorEx.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.hostileColorEx.hint\"),\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tdefault: \"#000000\",\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"friendlyColor\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.friendlyColor.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.friendlyColor.hint\"),\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tdefault: \"#43DFDF\",\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"friendlyColorEx\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.friendlyColorEx.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.friendlyColorEx.hint\"),\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tdefault: \"#000000\",\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"neutralColor\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.neutralColor.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.neutralColor.hint\"),\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tdefault: \"#F1D836\",\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"neutralColorEx\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.neutralColorEx.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.neutralColorEx.hint\"),\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tdefault: \"#000000\",\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"partyColor\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.partyColor.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.partyColor.hint\"),\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tdefault: \"#33BC4E\",\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"partyColorEx\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.partyColorEx.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.partyColorEx.hint\"),\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tdefault: \"#000000\",\n\t\tconfig: true\n\t});\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"actorFolderColorEx\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.actorFolderColorEx.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.actorFolderColorEx.hint\"),\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tdefault: \"#000000\",\n\t\tconfig: true\n\t});\n\n\t// Setting off\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"customDispositionColorEx\", {\n\t\tname: i18n(CONSTANTS.MODULE_NAME + \".setting.customDispositionColorEx.name\"),\n\t\thint: i18n(CONSTANTS.MODULE_NAME + \".setting.customDispositionColorEx.hint\"),\n\t\tscope: \"world\",\n\t\ttype: String,\n\t\tdefault: \"#000000\",\n\t\tconfig: false\n\t});\n\n\t// ========================================================================\n\n\tgame.settings.register(CONSTANTS.MODULE_NAME, \"debug\", {\n\t\tname: `${CONSTANTS.MODULE_NAME}.setting.debug.name`,\n\t\thint: `${CONSTANTS.MODULE_NAME}.setting.debug.hint`,\n\t\tscope: \"client\",\n\t\tconfig: true,\n\t\tdefault: false,\n\t\ttype: Boolean\n\t});\n};\n\nclass ResetSettingsDialog extends FormApplication {\n\tconstructor(...args) {\n\t\t//@ts-ignore\n\t\tsuper(...args);\n\t\t//@ts-ignore\n\t\treturn new Dialog({\n\t\t\ttitle: game.i18n.localize(`${CONSTANTS.MODULE_NAME}.dialogs.resetsettings.title`),\n\t\t\tcontent:\n\t\t\t\t'<p style=\"margin-bottom:1rem;\">' +\n\t\t\t\tgame.i18n.localize(`${CONSTANTS.MODULE_NAME}.dialogs.resetsettings.content`) +\n\t\t\t\t\"</p>\",\n\t\t\tbuttons: {\n\t\t\t\tconfirm: {\n\t\t\t\t\ticon: '<i class=\"fas fa-check\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(`${CONSTANTS.MODULE_NAME}.dialogs.resetsettings.confirm`),\n\t\t\t\t\tcallback: async () => {\n\t\t\t\t\t\tconst worldSettings = game.settings.storage\n\t\t\t\t\t\t\t?.get(\"world\")\n\t\t\t\t\t\t\t?.filter((setting) => setting.key.startsWith(`${CONSTANTS.MODULE_NAME}.`));\n\t\t\t\t\t\tfor (let setting of worldSettings) {\n\t\t\t\t\t\t\tconsole.log(`Reset setting '${setting.key}'`);\n\t\t\t\t\t\t\tawait setting.delete();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//window.location.reload();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcancel: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: game.i18n.localize(`${CONSTANTS.MODULE_NAME}.dialogs.resetsettings.cancel`)\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: \"cancel\"\n\t\t});\n\t}\n\n\tasync _updateObject(event, formData = null) {\n\t\t// do nothing\n\t}\n}\n","export class FactionGraphic {\r\n    INT = 0;\r\n    EX = 0;\r\n    ICON = \"\";\r\n    TEXTURE_INT = PIXI.Texture.EMPTY;\r\n    TEXTURE_EX = PIXI.Texture.EMPTY;\r\n    INT_S = \"\";\r\n    EX_S = \"\";\r\n\r\n    constructor() {\r\n        this.INT = 0;\r\n        this.EX = 0;\r\n        this.ICON = \"\";\r\n        this.TEXTURE_INT = PIXI.Texture.EMPTY;\r\n        this.TEXTURE_EX = PIXI.Texture.EMPTY;\r\n        this.INT_S = \"\";\r\n        this.EX_S = \"\";\r\n    }\r\n}\r\n","import { advancedLosTestInLos, debug, getOwnedTokens, i18n } from \"./lib/lib.mjs\";\nimport { FactionGraphic } from \"./TokenFactionsModels.mjs\";\nimport CONSTANTS from \"./constants.mjs\";\n\nexport class TokenFactions {\n\tstatic TOKEN_FACTIONS_FLAGS = {\n\t\tFACTION_DRAW_FRAME: \"factionDrawFrame\", //'draw-frame',\n\t\tFACTION_DISABLE: \"factionDisable\", // 'disable'\n\t\t// FACTION_NO_BORDER: 'factionNoBorder', // noBorder\n\t\tFACTION_CUSTOM_COLOR_INT: \"factionCustomColorInt\",\n\t\tFACTION_CUSTOM_COLOR_EXT: \"factionCustomColorExt\",\n\t\tFACTION_CUSTOM_FRAME_OPACITY: \"factionCustomFrameOpacity\",\n\t\tFACTION_CUSTOM_BASE_OPACITY: \"factionCustomBaseOpacity\"\n\t};\n\n\tstatic TOKEN_FACTIONS_FRAME_STYLE = {\n\t\tFLAT: \"flat\",\n\t\tBELEVELED: \"beveled\",\n\t\tBORDER: \"border\"\n\t};\n\n\tstatic dispositionKey = (token) => {\n\t\tconst dispositionValue = parseInt(String(token.document.disposition), 10);\n\t\tlet disposition;\n\t\tif (token.actor && token.actor.hasPlayerOwner && token.actor.type === \"character\") {\n\t\t\tdisposition = \"party-member\";\n\t\t} else if (token.actor && token.actor.hasPlayerOwner) {\n\t\t\tdisposition = \"party-npc\";\n\t\t} else if (dispositionValue === 1) {\n\t\t\tdisposition = \"friendly-npc\";\n\t\t} else if (dispositionValue === 0) {\n\t\t\tdisposition = \"neutral-npc\";\n\t\t} else if (dispositionValue === -1) {\n\t\t\tdisposition = \"hostile-npc\";\n\t\t}\n\t\treturn disposition;\n\t};\n\n\tstatic bevelGradient;\n\tstatic bevelTexture;\n\n\tstatic defaultColors;\n\n\tstatic dispositions;\n\n\tstatic async onInit() {\n\t\tTokenFactions.defaultColors = {\n\t\t\t\"party-member\": game.settings.get(CONSTANTS.MODULE_NAME, \"partyColor\"), //'#33bc4e',\n\t\t\t\"party-npc\": game.settings.get(CONSTANTS.MODULE_NAME, \"partyColor\"), //'#33bc4e',\n\t\t\t\"friendly-npc\": game.settings.get(CONSTANTS.MODULE_NAME, \"friendlyColor\"), //'#43dfdf',\n\t\t\t\"neutral-npc\": game.settings.get(CONSTANTS.MODULE_NAME, \"neutralColor\"), //'#f1d836',\n\t\t\t\"hostile-npc\": game.settings.get(CONSTANTS.MODULE_NAME, \"hostileColor\"), //'#e72124',\n\n\t\t\t\"controlled-npc\": game.settings.get(CONSTANTS.MODULE_NAME, \"controlledColor\"),\n\t\t\t\"neutral-external-npc\": game.settings.get(CONSTANTS.MODULE_NAME, \"neutralColorEx\"),\n\t\t\t\"friendly-external-npc\": game.settings.get(CONSTANTS.MODULE_NAME, \"friendlyColorEx\"),\n\t\t\t\"hostile-external-npc\": game.settings.get(CONSTANTS.MODULE_NAME, \"hostileColorEx\"),\n\t\t\t\"controlled-external-npc\": game.settings.get(CONSTANTS.MODULE_NAME, \"controlledColorEx\"),\n\t\t\t\"party-external-member\": game.settings.get(CONSTANTS.MODULE_NAME, \"partyColorEx\"),\n\t\t\t\"party-external-npc\": game.settings.get(CONSTANTS.MODULE_NAME, \"partyColorEx\")\n\n\t\t\t//\"target-npc\": game.settings.get(CONSTANTS.MODULE_NAME, \"targetColor\"),\n\t\t\t//\"target-external-npc\": game.settings.get(CONSTANTS.MODULE_NAME, \"targetColorEx\")\n\t\t};\n\n\t\tTokenFactions.dispositions = Object.keys(TokenFactions.defaultColors);\n\n\t\tTokenFactions.bevelGradient = (\n\t\t\tawait loadTexture(`modules/${CONSTANTS.MODULE_NAME}/assets/bevel-gradient.jpg`)\n\t\t);\n\t\tTokenFactions.bevelTexture = (\n\t\t\tawait loadTexture(`modules/${CONSTANTS.MODULE_NAME}/assets/bevel-texture.png`)\n\t\t);\n\t}\n\n\tstatic renderTokenConfig = async function (config, html) {\n\t\tconst tokenDocument = config.object;\n\t\tif (!game.user?.isGM) {\n\t\t\treturn;\n\t\t}\n\t\tif (!html) {\n\t\t\treturn;\n\t\t}\n\t\tconst factionDisableValue = config.object.getFlag(\n\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE\n\t\t)\n\t\t\t? \"checked\"\n\t\t\t: \"\";\n\n\t\tconst currentCustomColorTokenInt =\n\t\t\tconfig.object.getFlag(CONSTANTS.MODULE_NAME, TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_COLOR_INT) ||\n\t\t\t\"#000000\";\n\n\t\tconst currentCustomColorTokenExt =\n\t\t\tconfig.object.getFlag(CONSTANTS.MODULE_NAME, TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_COLOR_EXT) ||\n\t\t\t\"#000000\";\n\n\t\tconst currentCustomColorTokenFrameOpacity =\n\t\t\tconfig.object.getFlag(\n\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_FRAME_OPACITY\n\t\t\t) || 0.5;\n\n\t\tconst currentCustomColorTokenBaseOpacity =\n\t\t\tconfig.object.getFlag(\n\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_BASE_OPACITY\n\t\t\t) || 0.5;\n\n\t\t// Expand the width\n\t\tconfig.position.width = 540;\n\t\tconfig.setPosition(config.position);\n\n\t\tconst nav = html.find(`nav.sheet-tabs.tabs[data-group=\"main\"]`);\n\t\tnav.append(\n\t\t\t$(`\n\t\t\t<a class=\"item\" data-tab=\"factions\">\n        <i class=\"fas fa-user-circle\"></i>\n\t\t\t\t${i18n(\"token-factions.label.factions\")}\n\t\t\t</a>\n\t\t`)\n\t\t);\n\n\t\tconst formConfig = `\n      <div class=\"form-group\">\n        <label>${i18n(\"token-factions.label.factionsCustomDisable\")}</label>\n        <input type=\"checkbox\"\n          data-edit=\"flags.${CONSTANTS.MODULE_NAME}.${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE}\"\n          name=\"flags.${CONSTANTS.MODULE_NAME}.${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE}\"\n          data-dtype=\"Boolean\" ${factionDisableValue}>\n      </div>\n      <div class=\"form-group\">\n        <label>${i18n(\"token-factions.label.factionsCustomColorTokenInt\")}</label>\n        <input type=\"color\"\n          data-edit=\"flags.${CONSTANTS.MODULE_NAME}.${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_COLOR_INT}\"\n          name=\"flags.${CONSTANTS.MODULE_NAME}.${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_COLOR_INT}\"\n          data-dtype=\"String\" value=\"${currentCustomColorTokenInt}\"></input>\n      </div>\n      <div class=\"form-group\">\n        <label>${i18n(\"token-factions.label.factionsCustomColorTokenExt\")}</label>\n        <input type=\"color\"\n          data-edit=\"flags.${CONSTANTS.MODULE_NAME}.${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_COLOR_EXT}\"\n          name=\"flags.${CONSTANTS.MODULE_NAME}.${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_COLOR_EXT}\"\n          data-dtype=\"String\" value=\"${currentCustomColorTokenExt}\"></input>\n      </div>\n      <div class=\"form-group\">\n        <label>${i18n(\"token-factions.label.factionsCustomColorTokenFrameOpacity\")}</label>\n        <input type=\"number\"\n          min=\"0\" max=\"1\" step=\"0.1\"\n          data-edit=\"flags.${CONSTANTS.MODULE_NAME}.${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_FRAME_OPACITY}\"\n          name=\"flags.${CONSTANTS.MODULE_NAME}.${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_FRAME_OPACITY}\"\n          data-dtype=\"Number\" value=\"${currentCustomColorTokenFrameOpacity}\"></input>\n      </div>\n      <div class=\"form-group\">\n        <label>${i18n(\"token-factions.label.factionsCustomColorTokenBaseOpacity\")}</label>\n        <input type=\"number\"\n          min=\"0\" max=\"1\" step=\"0.1\"\n          data-edit=\"flags.${CONSTANTS.MODULE_NAME}.${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_BASE_OPACITY}\"\n          name=\"flags.${CONSTANTS.MODULE_NAME}.${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_BASE_OPACITY}\"\n          data-dtype=\"Number\" value=\"${currentCustomColorTokenBaseOpacity}\"></input>\n      </div>\n    `;\n\n\t\tnav.parent()\n\t\t\t.find(\"footer\")\n\t\t\t.before(\n\t\t\t\t$(`\n\t\t\t<div class=\"tab\" data-tab=\"factions\">\n\t\t\t\t${formConfig}\n\t\t\t</div>\n\t\t`)\n\t\t\t);\n\n\t\tnav.parent()\n\t\t\t.find('.tab[data-tab=\"factions\"] input[type=\"checkbox\"][data-edit]')\n\t\t\t.change(config._onChangeInput.bind(config));\n\t\t// nav\n\t\t//   .parent()\n\t\t//   .find('.tab[data-tab=\"factions\"] input[type=\"color\"][data-edit]')\n\t\t//   .change(config._onChangeInput.bind(config));\n\t};\n\n\t// static _applyFactions = async function (document | Actor, updateData): Promise<void> {\n\t// \t// Set the disable flag\n\t// \tlet propertyNameDisable = `flags.${CONSTANTS.MODULE_NAME}.${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE}`;\n\t// \tif (document instanceof Actor) {\n\t// \t\tpropertyNameDisable = \"token.\" + propertyNameDisable;\n\t// \t}\n\t// \tconst factionDisableValue = getProperty(updateData, propertyNameDisable);\n\t// \tif (factionDisableValue !== undefined && factionDisableValue !== null) {\n\t// \t\tsetProperty(updateData, propertyNameDisable, factionDisableValue);\n\t// \t\tif (!factionDisableValue) {\n\t// \t\t\tif (document instanceof Actor) {\n\t// \t\t\t\tconst actor = <Actor>document;\n\t// \t\t\t\t//@ts-ignore\n\t// \t\t\t\tconst token = actor.token?._object;\n\t// \t\t\t\t// token.refresh();\n\t// \t\t\t\tawait TokenFactions.updateTokenDataFaction(token.document);\n\t// \t\t\t\t// token.draw();\n\t// \t\t\t} else {\n\t// \t\t\t\tconst tokenDocument = document;\n\t// \t\t\t\t//@ts-ignore\n\t// \t\t\t\tconst token = tokenDocument?._object;\n\t// \t\t\t\t// token.refresh();\n\t// \t\t\t\tawait TokenFactions.updateTokenDataFaction(token.document);\n\t// \t\t\t\t// token.draw();\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// };\n\n\tstatic updateTokenDataFaction(tokenData) {\n\t\tlet tokens;\n\t\ttry {\n\t\t\ttokens = canvas.tokens?.placeables;\n\t\t} catch (e) {\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\tif (!TokenFactions.bevelGradient || !TokenFactions.bevelGradient.baseTexture) {\n\t\t\tTokenFactions.bevelGradient = (\n\t\t\t\tawait loadTexture(`modules/${CONSTANTS.MODULE_NAME}/assets/bevel-gradient.jpg`)\n\t\t\t);\n\t\t\tTokenFactions.bevelTexture = (\n\t\t\t\tawait loadTexture(`modules/${CONSTANTS.MODULE_NAME}/assets/bevel-texture.png`)\n\t\t\t);\n\t\t}\n\t\t*/\n\t\tif (tokenData?.id) {\n\t\t\tconst token = canvas.tokens?.placeables.find((tokenPlaceable) => tokenPlaceable.id === tokenData.id);\n\t\t\tif (token) {\n\t\t\t\ttokens = [token];\n\t\t\t}\n\t\t}\n\n\t\ttokens.forEach((token) => {\n\t\t\tTokenFactions.updateTokenFaction(token);\n\t\t});\n\t}\n\n\tstatic updateTokenFaction(token) {\n\t\tif (!token) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (token instanceof TokenDocument) {\n\t\t\ttoken = (token)?.object;\n\t\t}\n\t\tif (!token.id) {\n\t\t\treturn token;\n\t\t}\n\t\tif (!token.document) {\n\t\t\treturn token;\n\t\t}\n\t\t//@ts-ignore\n\t\tif (!(token instanceof Token)) {\n\t\t\treturn token;\n\t\t}\n\t\ttoken.sortableChildren = true;\n\t\t/*\n\t\tconst isPlayerOwned = token.document.isOwner;\n\t\t// When i hidden this hide for everyone except owner and gm\n\t\tif (token.document.hidden) {\n\t\t\tif (!game.user?.isGM && !isPlayerOwned) {\n\t\t\t\tTokenFactions.clearGridFaction(token.document.id);\n\t\t\t\t// tokenFactionsSocket.executeAsGM(\"clearGridFaction\", token.document.id);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// or if a token is not visible\n\t\t//@ts-ignore\n\t\tif (token.document.object) {\n\t\t\tconst someoneIsSelected = canvas.tokens?.controlled?.length > 0;\n\t\t\tif (!game.user?.isGM && !isPlayerOwned) {\n\t\t\t\tlet isVisible = token.isVisible;\n\t\t\t\tif (!isVisible) {\n\t\t\t\t\tTokenFactions.clearGridFaction(token.document.id);\n\t\t\t\t\t// tokenFactionsSocket.executeAsGM(\"clearGridFaction\", tokenData.id);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// else if (game.user?.isGM && someoneIsSelected) {\n\t\t\t// \tlet isVisible = false;\n\t\t\t// \tconst tokensToClear = <string[]>[];\n\t\t\t// \tfor (const ownedToken of canvas.tokens?.placeables) {\n\t\t\t// \t\tif (ownedToken.id === token.id) {\n\t\t\t// \t\t\tcontinue;\n\t\t\t// \t\t}\n\t\t\t// \t\t//@ts-ignore\n\t\t\t// \t\tif(ownedToken.controlled){\n\t\t\t// \t\t\tcontinue;\n\t\t\t// \t\t}\n\t\t\t// \t\tconst sourceCenter = {\n\t\t\t// \t\t\tx: ownedToken.center.x,\n\t\t\t// \t\t\ty: ownedToken.center.y,\n\t\t\t// \t\t\t//@ts-ignore\n\t\t\t// \t\t\tz: ownedToken.losHeight,\n\t\t\t// \t\t};\n\t\t\t// \t\tconst tolerance = Math.min(ownedToken.w, ownedToken.h) / 4; // this is the same of levels\n\t\t\t// \t\tconst isVisibleX =\n\t\t\t// \t\t\t//@ts-ignore\n\t\t\t// \t\t\tcanvas.effects.visibility.testVisibility(sourceCenter, { tolerance: tolerance, object: token });\n\t\t\t// \t\tif (isVisibleX) {\n\t\t\t// \t\t\tisVisible = true;\n\t\t\t// \t\t\tbreak;\n\t\t\t// \t\t} else {\n\t\t\t// \t\t\ttokensToClear.push(ownedToken.id);\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// \t// }\n\t\t\t// \tif (!isVisible) {\n\t\t\t// \t\tfor(const id of tokensToClear){\n\t\t\t// \t\t\tTokenFactions.clearGridFaction(id);\n\t\t\t// \t\t}\n\t\t\t// \t\t// tokenFactionsSocket.executeAsGM(\"clearGridFaction\", tokenData.id);\n\t\t\t// \t\treturn;\n\t\t\t// \t}\n\t\t\t// }\n\t\t}\n\t\t*/\n\t\t// OLD FVTT 9\n\t\t/*\n\t\t//@ts-ignore\n\t\tif (!token.faction || token.faction.destroyed) {\n\t\t\t//@ts-ignore\n\t\t\ttoken.faction = token.addChildAt(new PIXI.Container(), 0);\n\t\t}\n\t\ttoken.sortableChildren = true;\n\t\t// token.sortDirty = true;\n\t\t*/\n\t\t// FVTT 10 WITH GRID\n\t\t/*\n\t\t//@ts-ignore\n\t\tif (!canvas.grid.faction) {\n\t\t\t//@ts-ignore\n\t\t\tcanvas.grid.faction = {};\n\t\t}\n\t\t//@ts-ignore\n\t\tif (!canvas.grid.faction[token.id]) {\n\t\t\t//@ts-ignore\n\t\t\tcanvas.grid.faction[token.id] = new PIXI.Container();\n\t\t\t//@ts-ignore\n\t\t\tcanvas.grid.addChild(canvas.grid.faction[token.id]);\n\t\t}\n\t\t//@ts-ignore\n\t\tif (!canvas.grid.faction[token.id].geometry) {\n\t\t\t//@ts-ignore\n\t\t\tcanvas.grid.removeChild(canvas.grid.faction[token.id]);\n\t\t\t//@ts-ignore\n\t\t\tcanvas.grid.faction[token.id] = new PIXI.Container();\n\t\t\t//@ts-ignore\n\t\t\tcanvas.grid.addChild(canvas.grid.faction[token.id]);\n\t\t}\n\t\t//@ts-ignore\n\t\tlet factionBorderContainer = canvas.grid.faction[token.id];\n\t\t// factionBorder.sortableChildren = true;\n\t\t// factionBorder.clear();\n\t\t*/\n\n\t\t//@ts-ignore\n\t\tif (!token.faction || token.faction.destroyed) {\n\t\t\t//@ts-ignore\n\t\t\ttoken.faction = token.addChildAt(new PIXI.Container(), 0);\n\t\t}\n\t\t//@ts-ignore\n\t\ttoken.faction.removeChildren().forEach((c) => c.destroy());\n\t\t//@ts-ignore\n\t\tlet factionBorderContainer = token.faction;\n\n\t\t//@ts-ignore\n\t\tfactionBorderContainer = TokenFactions._drawBorderFaction(token, factionBorderContainer);\n\t\t//@ts-ignore\n\t\t// token.addChildAt(factionBorderContainer, 0);\n\t\t// TokenFactions.clearGridFaction(token.id);\n\t\t//@ts-ignore\n\t\tif (token.mesh) {\n\t\t\t//@ts-ignore\n\t\t\tif (token.border) {\n\t\t\t\t//@ts-ignore\n\t\t\t\tif (token.mesh.zIndex >= token.border.zIndex) {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\ttoken.mesh.zIndex = token.border.zIndex - 1;\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tif (token.faction.zIndex >= token.mesh.zIndex) {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\ttoken.faction.zIndex = token.mesh.zIndex - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//@ts-ignore\n\t\t\t\tif (token.zIndex >= token.border.zIndex) {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\ttoken.zIndex = token.border.zIndex - 1;\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tif (token.faction.zIndex >= token.zIndex) {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\ttoken.faction.zIndex = token.zIndex - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//@ts-ignore\n\t\t\t\tif (token.faction.zIndex >= token.border.zIndex) {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\ttoken.faction.zIndex = token.border.zIndex - 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//@ts-ignore\n\t\t\t\tif (token.faction.zIndex >= token.mesh.zIndex) {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\ttoken.faction.zIndex = token.mesh.zIndex - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t//@ts-ignore\n\t\t\tif (token.border) {\n\t\t\t\t//@ts-ignore\n\t\t\t\tif (token.zIndex >= token.border.zIndex) {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\ttoken.zIndex = token.border.zIndex - 1;\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tif (token.faction.zIndex >= token.zIndex) {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\ttoken.faction.zIndex = token.zIndex - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//@ts-ignore\n\t\t\t\tif (token.faction.zIndex >= token.zIndex) {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\ttoken.faction.zIndex = token.zIndex - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn token;\n\t}\n\n\t// START NEW MANAGE\n\n\tstatic AddBorderToggle(app, html, data) {\n\t\tif (!game.user?.isGM) {\n\t\t\treturn;\n\t\t}\n\t\tif (!game.settings.get(CONSTANTS.MODULE_NAME, \"hudEnable\")) {\n\t\t\treturn;\n\t\t}\n\t\tif (!app?.object?.document) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst factionDisableFlag = app.object.document.getFlag(\n\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE\n\t\t);\n\n\t\tconst borderButton = `\n    <div class=\"control-icon factionBorder\n      ${factionDisableFlag ? \"active\" : \"\"}\"\n      title=\"Toggle Faction Border\"> <i class=\"fas fa-angry\"></i>\n    </div>`;\n\n\t\tconst settingHudColClass = game.settings.get(CONSTANTS.MODULE_NAME, \"hudColumn\") ?? \"right\";\n\t\tconst settingHudTopBottomClass = game.settings.get(CONSTANTS.MODULE_NAME, \"hudTopBottom\") ?? \"bottom\";\n\n\t\tconst buttonPos = \".\" + settingHudColClass.toLowerCase();\n\n\t\tconst col = html.find(buttonPos);\n\t\tif (settingHudTopBottomClass.toLowerCase() === \"top\") {\n\t\t\tcol.prepend(borderButton);\n\t\t} else {\n\t\t\tcol.append(borderButton);\n\t\t}\n\n\t\thtml.find(\".factionBorder\").click(this.ToggleBorder.bind(app));\n\t\thtml.find(\".factionBorder\").contextmenu(this.ToggleCustomBorder.bind(app));\n\t}\n\n\tstatic async ToggleBorder(event) {\n\t\t//@ts-ignore\n\t\tconst borderIsDisabled = this.object.document.getFlag(\n\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE\n\t\t);\n\n\t\tfor (const token of canvas.tokens?.controlled) {\n\t\t\t//@ts-ignore\n\t\t\tawait token.document.setFlag(\n\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE,\n\t\t\t\t!borderIsDisabled\n\t\t\t);\n\t\t\t// if (borderIsDisabled) {\n\t\t\t// \tawait token.document.unsetFlag(\n\t\t\t// \t\tCONSTANTS.MODULE_NAME,\n\t\t\t// \t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_COLOR_INT\n\t\t\t// \t);\n\t\t\t// \tawait token.document.unsetFlag(\n\t\t\t// \t\tCONSTANTS.MODULE_NAME,\n\t\t\t// \t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_COLOR_EXT\n\t\t\t// \t);\n\t\t\t// \tawait token.document.unsetFlag(\n\t\t\t// \t\tCONSTANTS.MODULE_NAME,\n\t\t\t// \t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_FRAME_OPACITY\n\t\t\t// \t);\n\t\t\t// \tawait token.document.unsetFlag(\n\t\t\t// \t\tCONSTANTS.MODULE_NAME,\n\t\t\t// \t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_BASE_OPACITY\n\t\t\t// \t);\n\t\t\t// }\n\t\t}\n\n\t\tevent.currentTarget.classList.toggle(\"active\", !borderIsDisabled);\n\t}\n\n\tstatic async ToggleCustomBorder(event) {\n\t\t//@ts-ignore\n\t\tconst tokenTmp = this.object;\n\n\t\tconst currentCustomColorTokenInt =\n\t\t\ttokenTmp.document.getFlag(\n\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_COLOR_INT\n\t\t\t) || \"#000000\";\n\n\t\tconst currentCustomColorTokenExt =\n\t\t\ttokenTmp.document.getFlag(\n\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_COLOR_EXT\n\t\t\t) || \"#000000\";\n\n\t\tconst currentCustomColorTokenFrameOpacity =\n\t\t\ttokenTmp.document.getFlag(\n\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_FRAME_OPACITY\n\t\t\t) || 0.5;\n\n\t\tconst currentCustomColorTokenBaseOpacity =\n\t\t\ttokenTmp.document.getFlag(\n\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_BASE_OPACITY\n\t\t\t) || 0.5;\n\n\t\tconst dialogContent = `\n      <div class=\"form-group\">\n        <label>${i18n(\"token-factions.label.factionsCustomColorTokenInt\")}</label>\n        <input type=\"color\"\n          value=\"${currentCustomColorTokenInt}\"\n          data-edit=\"token-factions.currentCustomColorTokenInt\"></input>\n      </div>\n      <div class=\"form-group\">\n        <label>${i18n(\"token-factions.label.factionsCustomColorTokenExt\")}</label>\n        <input type=\"color\"\n          value=\"${currentCustomColorTokenExt}\"\n          data-edit=\"token-factions.currentCustomColorTokenExt\"></input>\n      </div>\n      <div class=\"form-group\">\n        <label>${i18n(\"token-factions.label.factionsCustomColorTokenFrameOpacity\")}</label>\n        <input type=\"number\"\n          min=\"0\" max=\"1\" step=\"0.1\"\n          value=\"${currentCustomColorTokenFrameOpacity}\"\n          data-edit=\"token-factions.currentCustomColorTokenFrameOpacity\"></input>\n      </div>\n      <div class=\"form-group\">\n        <label>${i18n(\"token-factions.label.factionsCustomColorTokenBaseOpacity\")}</label>\n        <input type=\"number\"\n          min=\"0\" max=\"1\" step=\"0.1\"\n          value=\"${currentCustomColorTokenBaseOpacity}\"\n          data-edit=\"token-factions.currentCustomColorTokenBaseOpacity\"></input>\n      </div>\n      `;\n\n\t\tconst d = new Dialog({\n\t\t\ttitle: i18n(\"token-factions.label.chooseCustomColorToken\"),\n\t\t\tcontent: dialogContent,\n\t\t\tbuttons: {\n\t\t\t\tyes: {\n\t\t\t\t\tlabel: i18n(\"token-factions.label.applyCustomColor\"),\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tcallback: async (html) => {\n\t\t\t\t\t\tconst newCurrentCustomColorTokenInt = (\n\t\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\thtml.find(`input[data-edit='token-factions.currentCustomColorTokenInt']`)[0]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t).val()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst newCurrentCustomColorTokenExt = (\n\t\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\thtml.find(`input[data-edit='token-factions.currentCustomColorTokenExt']`)[0]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t).val()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst newCurrentCustomColorTokenFrameOpacity = (\n\t\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\thtml.find(\n\t\t\t\t\t\t\t\t\t\t`input[data-edit='token-factions.currentCustomColorTokenFrameOpacity']`\n\t\t\t\t\t\t\t\t\t)[0]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t).val()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst newCurrentCustomColorTokenBaseOpacity = (\n\t\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\thtml.find(`input[data-edit='token-factions.currentCustomColorTokenBaseOpacity']`)[0]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t).val()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (const token of canvas.tokens?.controlled) {\n\t\t\t\t\t\t\ttoken.document.setFlag(\n\t\t\t\t\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\t\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_COLOR_INT,\n\t\t\t\t\t\t\t\tnewCurrentCustomColorTokenInt\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttoken.document.setFlag(\n\t\t\t\t\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\t\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_COLOR_EXT,\n\t\t\t\t\t\t\t\tnewCurrentCustomColorTokenExt\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttoken.document.setFlag(\n\t\t\t\t\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\t\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_FRAME_OPACITY,\n\t\t\t\t\t\t\t\tnewCurrentCustomColorTokenFrameOpacity\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttoken.document.setFlag(\n\t\t\t\t\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\t\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_BASE_OPACITY,\n\t\t\t\t\t\t\t\tnewCurrentCustomColorTokenBaseOpacity\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\tlabel: i18n(\"token-factions.label.doNothing\"),\n\t\t\t\t\tcallback: (html) => {\n\t\t\t\t\t\t// Do nothing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: \"no\"\n\t\t});\n\t\td.render(true);\n\t}\n\n\tstatic _clamp(value, max, min) {\n\t\treturn Math.min(Math.max(value, min), max);\n\t}\n\n\tstatic _componentToHex(c) {\n\t\tconst hex = c.toString(16);\n\t\treturn hex.length == 1 ? \"0\" + hex : hex;\n\t}\n\n\tstatic _rgbToHex(A) {\n\t\tif (A[0] === undefined || A[1] === undefined || A[2] === undefined) console.error(\"RGB color invalid\");\n\t\treturn (\n\t\t\t\"#\" +\n\t\t\tTokenFactions._componentToHex(A[0]) +\n\t\t\tTokenFactions._componentToHex(A[1]) +\n\t\t\tTokenFactions._componentToHex(A[2])\n\t\t);\n\t}\n\n\tstatic _hexToRgb(hex) {\n\t\tconst result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\t\treturn result\n\t\t\t? {\n\t\t\t\t\tr: parseInt(result[1], 16),\n\t\t\t\t\tg: parseInt(result[2], 16),\n\t\t\t\t\tb: parseInt(result[3], 16)\n\t\t\t  }\n\t\t\t: null;\n\t}\n\n\tstatic _interpolateColor(color1, color2, factor) {\n\t\tif (arguments.length < 3) {\n\t\t\tfactor = 0.5;\n\t\t}\n\t\tconst result = color1.slice();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tresult[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n\t\t}\n\t\treturn result;\n\t}\n\n\t// My function to interpolate between two colors completely, returning an array\n\tstatic _interpolateColors(color1, color2, steps) {\n\t\tconst stepFactor = 1 / (steps - 1);\n\t\tconst interpolatedColorArray = [];\n\n\t\tcolor1 = color1.match(/\\d+/g).map(Number);\n\t\tcolor2 = color2.match(/\\d+/g).map(Number);\n\n\t\tfor (let i = 0; i < steps; i++) {\n\t\t\tinterpolatedColorArray.push(TokenFactions._interpolateColor(color1, color2, stepFactor * i));\n\t\t}\n\n\t\treturn interpolatedColorArray;\n\t}\n\n\t// static refreshAll() {\n\t// \tcanvas.tokens?.placeables.forEach((t) => t.draw());\n\t// }\n\n\t// ADDED\n\n\tstatic async updateTokensAll() {\n\t\tcanvas.tokens?.placeables.forEach((tokenDoc) => {\n\t\t\tTokenFactions._updateTokensBorder(tokenDoc.document);\n\t\t});\n\t}\n\n\tstatic async _updateTokensBorder(tokenData) {\n\t\tconst currentTokenID = tokenData?.id ? tokenData?.id : tokenData?._id;\n\t\tconst tokens = [];\n\t\tconst tokenDoc = canvas.tokens?.get(currentTokenID)?.document;\n\t\tif (!tokenDoc) {\n\t\t\tconst actorID = currentTokenID; // game.actors?.get(currentTokenID)?.id;\n\t\t\tconst scene = game.scenes?.get(game.user?.viewedScene);\n\t\t\tif (scene) {\n\t\t\t\tscene.tokens.forEach((tokenTmp) => {\n\t\t\t\t\tif ((tokenTmp.actor && tokenTmp.actor.id === actorID)) {\n\t\t\t\t\t\ttokens.push(tokenTmp);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttokens.push(tokenDoc);\n\t\t}\n\n\t\ttokens.forEach((tokenDoc) => {\n\t\t\tif (tokenDoc) {\n\t\t\t\tconst tokenID = tokenDoc.id;\n\t\t\t\tconst sceneID = (canvas.tokens?.get(tokenDoc.id)).scene.id;\n\t\t\t\tconst specifiedScene = game.scenes?.get(sceneID);\n\t\t\t\tif (specifiedScene) {\n\t\t\t\t\tif (!specifiedScene) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\ttokenDoc = specifiedScene.tokens.find((tokenTmp) => {\n\t\t\t\t\t\treturn (tokenTmp.id === tokenID);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (!tokenDoc) {\n\t\t\t\t\tlet foundToken = null;\n\t\t\t\t\tgame.scenes?.find((sceneTmp) => {\n\t\t\t\t\t\t// getTokenForScene(scene, tokenID);\n\t\t\t\t\t\tif (!sceneTmp) {\n\t\t\t\t\t\t\tfoundToken = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfoundToken = sceneTmp.tokens.find((token) => {\n\t\t\t\t\t\t\treturn token.id === tokenID;\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn !!foundToken;\n\t\t\t\t\t});\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\ttokenDoc = foundToken;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!tokenDoc) {\n\t\t\t\t// Is not in the current canvas\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// TokenDocument to Token\n\t\t\t//@ts-ignore\n\t\t\tconst token = tokenDoc._object;\n\t\t\tif (!token.id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttoken.sortableChildren = true;\n\t\t\t// FVTT 10 WITH GRID\n\t\t\t/*\n\t\t\t//@ts-ignore\n\t\t\tif (!canvas.grid.faction) {\n\t\t\t\t//@ts-ignore\n\t\t\t\tcanvas.grid.faction = {};\n\t\t\t}\n\t\t\t//@ts-ignore\n\t\t\tif (!canvas.grid.faction[token.id]) {\n\t\t\t\t//@ts-ignore\n\t\t\t\tcanvas.grid.faction[token.id] = new PIXI.Container();\n\t\t\t\t//@ts-ignore\n\t\t\t\tcanvas.grid.addChild(canvas.grid.faction[token.id]);\n\t\t\t}\n\t\t\t//@ts-ignore\n\t\t\tif (!canvas.grid.faction[token.id].geometry) {\n\t\t\t\t//@ts-ignore\n\t\t\t\tcanvas.grid.removeChild(canvas.grid.faction[token.id]);\n\t\t\t\t//@ts-ignore\n\t\t\t\tcanvas.grid.faction[token.id] = new PIXI.Container();\n\t\t\t\t//@ts-ignore\n\t\t\t\tcanvas.grid.addChild(canvas.grid.faction[token.id]);\n\t\t\t}\n\t\t\t//@ts-ignore\n\t\t\tlet factionBorderContainer = canvas.grid.faction[token.id];\n\t\t\t*/\n\n\t\t\t//@ts-ignore\n\t\t\tif (!token.faction || token.faction.destroyed) {\n\t\t\t\t//@ts-ignore\n\t\t\t\ttoken.faction = token.addChildAt(new PIXI.Container(), 0);\n\t\t\t}\n\t\t\t//@ts-ignore\n\t\t\ttoken.faction.removeChildren().forEach((c) => c.destroy());\n\t\t\t//@ts-ignore\n\t\t\tlet factionBorderContainer = token.faction;\n\n\t\t\t//@ts-ignore\n\t\t\tfactionBorderContainer = TokenFactions._drawBorderFaction(token, factionBorderContainer);\n\t\t\t//@ts-ignore\n\t\t\t// token.addChildAt(factionBorderContainer, 0);\n\t\t\t// TokenFactions.clearGridFaction(token.id);\n\t\t\t//@ts-ignore\n\t\t\tif (token.mesh) {\n\t\t\t\t//@ts-ignore\n\t\t\t\tif (token.border) {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tif (token.mesh.zIndex >= token.border.zIndex) {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\ttoken.mesh.zIndex = token.border.zIndex - 1;\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\tif (token.faction.zIndex >= token.mesh.zIndex) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\ttoken.faction.zIndex = token.mesh.zIndex - 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tif (token.zIndex >= token.border.zIndex) {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\ttoken.zIndex = token.border.zIndex - 1;\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\tif (token.faction.zIndex >= token.zIndex) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\ttoken.faction.zIndex = token.zIndex - 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tif (token.faction.zIndex >= token.border.zIndex) {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\ttoken.faction.zIndex = token.border.zIndex - 1;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tif (token.faction.zIndex >= token.mesh.zIndex) {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\ttoken.faction.zIndex = token.mesh.zIndex - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//@ts-ignore\n\t\t\t\tif (token.border) {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tif (token.zIndex >= token.border.zIndex) {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\ttoken.zIndex = token.border.zIndex - 1;\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\tif (token.faction.zIndex >= token.zIndex) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\ttoken.faction.zIndex = token.zIndex - 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tif (token.faction.zIndex >= token.zIndex) {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\ttoken.faction.zIndex = token.zIndex - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn;\n\t}\n\n\tstatic colorBorderFaction(token) {\n\t\tif (!TokenFactions.defaultColors) {\n\t\t\tTokenFactions.onInit();\n\t\t}\n\n\t\tconst colorFrom = game.settings.get(CONSTANTS.MODULE_NAME, \"color-from\");\n\t\tlet color;\n\t\tlet icon;\n\t\tif (colorFrom === \"token-disposition\") {\n\t\t\tconst disposition = TokenFactions.dispositionKey(token);\n\t\t\tif (disposition) {\n\t\t\t\tcolor = TokenFactions.defaultColors[disposition];\n\t\t\t}\n\t\t} else if (colorFrom === \"actor-folder-color\") {\n\t\t\tif (token.actor && token.actor.folder && token.actor.folder) {\n\t\t\t\t//@ts-ignore\n\t\t\t\tcolor = token.actor.folder.color;\n\t\t\t\t//@ts-ignore\n\t\t\t\ticon = token.actor.folder.icon;\n\t\t\t}\n\t\t} else {\n\t\t\t// colorFrom === 'custom-disposition'\n\t\t\t// TODO PUT SOME NEW FLAG ON THE TOKEN\n\t\t\tconst disposition = TokenFactions.dispositionKey(token);\n\t\t\tif (disposition) {\n\t\t\t\tcolor = game.settings.get(CONSTANTS.MODULE_NAME, `custom-${disposition}-color`);\n\t\t\t}\n\t\t}\n\n\t\tconst currentCustomColorTokenInt = (\n\t\t\ttoken.document.getFlag(CONSTANTS.MODULE_NAME, TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_COLOR_INT)\n\t\t);\n\t\tconst currentCustomColorTokenExt = (\n\t\t\ttoken.document.getFlag(CONSTANTS.MODULE_NAME, TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_COLOR_EXT)\n\t\t);\n\n\t\tconst overrides = {\n\t\t\tCONTROLLED: {\n\t\t\t\tINT: parseInt(String(game.settings.get(CONSTANTS.MODULE_NAME, \"controlledColor\")).substr(1), 16),\n\t\t\t\tEX: parseInt(String(game.settings.get(CONSTANTS.MODULE_NAME, \"controlledColorEx\")).substr(1), 16),\n\t\t\t\tICON: \"\",\n\t\t\t\tTEXTURE_INT: PIXI.Texture.EMPTY,\n\t\t\t\tTEXTURE_EX: PIXI.Texture.EMPTY,\n\t\t\t\tINT_S: String(game.settings.get(CONSTANTS.MODULE_NAME, \"controlledColor\")),\n\t\t\t\tEX_S: String(game.settings.get(CONSTANTS.MODULE_NAME, \"controlledColorEx\"))\n\t\t\t},\n\t\t\tFRIENDLY: {\n\t\t\t\tINT: parseInt(String(game.settings.get(CONSTANTS.MODULE_NAME, \"friendlyColor\")).substr(1), 16),\n\t\t\t\tEX: parseInt(String(game.settings.get(CONSTANTS.MODULE_NAME, \"friendlyColorEx\")).substr(1), 16),\n\t\t\t\tICON: \"\",\n\t\t\t\tTEXTURE_INT: PIXI.Texture.EMPTY,\n\t\t\t\tTEXTURE_EX: PIXI.Texture.EMPTY,\n\t\t\t\tINT_S: String(game.settings.get(CONSTANTS.MODULE_NAME, \"friendlyColor\")),\n\t\t\t\tEX_S: String(game.settings.get(CONSTANTS.MODULE_NAME, \"friendlyColorEx\"))\n\t\t\t},\n\t\t\tNEUTRAL: {\n\t\t\t\tINT: parseInt(String(game.settings.get(CONSTANTS.MODULE_NAME, \"neutralColor\")).substr(1), 16),\n\t\t\t\tEX: parseInt(String(game.settings.get(CONSTANTS.MODULE_NAME, \"neutralColorEx\")).substr(1), 16),\n\t\t\t\tICON: \"\",\n\t\t\t\tTEXTURE_INT: PIXI.Texture.EMPTY,\n\t\t\t\tTEXTURE_EX: PIXI.Texture.EMPTY,\n\t\t\t\tINT_S: String(game.settings.get(CONSTANTS.MODULE_NAME, \"neutralColor\")),\n\t\t\t\tEX_S: String(game.settings.get(CONSTANTS.MODULE_NAME, \"neutralColorEx\"))\n\t\t\t},\n\t\t\tHOSTILE: {\n\t\t\t\tINT: parseInt(String(game.settings.get(CONSTANTS.MODULE_NAME, \"hostileColor\")).substr(1), 16),\n\t\t\t\tEX: parseInt(String(game.settings.get(CONSTANTS.MODULE_NAME, \"hostileColorEx\")).substr(1), 16),\n\t\t\t\tICON: \"\",\n\t\t\t\tTEXTURE_INT: PIXI.Texture.EMPTY,\n\t\t\t\tTEXTURE_EX: PIXI.Texture.EMPTY,\n\t\t\t\tINT_S: String(game.settings.get(CONSTANTS.MODULE_NAME, \"hostileColor\")),\n\t\t\t\tEX_S: String(game.settings.get(CONSTANTS.MODULE_NAME, \"hostileColorEx\"))\n\t\t\t},\n\t\t\tPARTY: {\n\t\t\t\tINT: parseInt(String(game.settings.get(CONSTANTS.MODULE_NAME, \"partyColor\")).substr(1), 16),\n\t\t\t\tEX: parseInt(String(game.settings.get(CONSTANTS.MODULE_NAME, \"partyColorEx\")).substr(1), 16),\n\t\t\t\tICON: \"\",\n                TEXTURE_INT: PIXI.Texture.EMPTY,\n\t\t\t\tTEXTURE_EX: PIXI.Texture.EMPTY,\n\t\t\t\tINT_S: String(game.settings.get(CONSTANTS.MODULE_NAME, \"partyColor\")),\n\t\t\t\tEX_S: String(game.settings.get(CONSTANTS.MODULE_NAME, \"partyColorEx\"))\n\t\t\t},\n\t\t\tACTOR_FOLDER_COLOR: {\n\t\t\t\tINT: parseInt(String(color).substr(1), 16),\n\t\t\t\tEX: parseInt(String(game.settings.get(CONSTANTS.MODULE_NAME, \"actorFolderColorEx\")).substr(1), 16),\n\t\t\t\tICON: icon ? String(icon) : \"\",\n\t\t\t\tTEXTURE_INT: PIXI.Texture.EMPTY,\n\t\t\t\tTEXTURE_EX: PIXI.Texture.EMPTY,\n\t\t\t\tINT_S: String(color),\n\t\t\t\tEX_S: String(game.settings.get(CONSTANTS.MODULE_NAME, \"actorFolderColorEx\"))\n\t\t\t},\n\t\t\tCUSTOM_DISPOSITION: {\n\t\t\t\tINT: parseInt(String(color).substr(1), 16),\n\t\t\t\tEX: parseInt(\n\t\t\t\t\tString(game.settings.get(CONSTANTS.MODULE_NAME, \"customDispositionColorEx\")).substr(1),\n\t\t\t\t\t16\n\t\t\t\t),\n\t\t\t\tICON: \"\",\n\t\t\t\tTEXTURE_INT: PIXI.Texture.EMPTY,\n\t\t\t\tTEXTURE_EX: PIXI.Texture.EMPTY,\n\t\t\t\tINT_S: String(color),\n\t\t\t\tEX_S: String(game.settings.get(CONSTANTS.MODULE_NAME, \"customDispositionColorEx\"))\n\t\t\t}\n\t\t};\n\n\t\tlet borderControlCustom = null;\n\t\tif (currentCustomColorTokenInt && currentCustomColorTokenInt != \"#000000\") {\n\t\t\tborderControlCustom = {\n\t\t\t\tINT: parseInt(String(currentCustomColorTokenInt).substr(1), 16),\n\t\t\t\tEX: parseInt(String(currentCustomColorTokenExt).substr(1), 16),\n\t\t\t\tICON: \"\",\n\t\t\t\tTEXTURE_INT: PIXI.Texture.EMPTY,\n\t\t\t\tTEXTURE_EX: PIXI.Texture.EMPTY,\n\t\t\t\tINT_S: String(currentCustomColorTokenInt),\n\t\t\t\tEX_S: String(currentCustomColorTokenExt)\n\t\t\t};\n\t\t}\n\n\t\tlet borderColor = new FactionGraphic();\n\t\tif (borderControlCustom) {\n\t\t\tborderColor = borderControlCustom;\n\t\t} else if (colorFrom === \"token-disposition\") {\n\t\t\tconst disPath = CONST.TOKEN_DISPOSITIONS;\n\n\t\t\t//@ts-ignore\n\t\t\tconst d = parseInt(token.document.disposition);\n\t\t\t//@ts-ignore\n\t\t\tif (!game.user?.isGM && token.owner) {\n\t\t\t\tborderColor = overrides.CONTROLLED;\n\t\t\t}\n\t\t\t//@ts-ignore\n\t\t\telse if (token.actor?.hasPlayerOwner) {\n\t\t\t\tborderColor = overrides.PARTY;\n\t\t\t} else if (d === disPath.FRIENDLY) {\n\t\t\t\tborderColor = overrides.FRIENDLY;\n\t\t\t} else if (d === disPath.NEUTRAL) {\n\t\t\t\tborderColor = overrides.NEUTRAL;\n\t\t\t} else {\n\t\t\t\tborderColor = overrides.HOSTILE;\n\t\t\t}\n\t\t} else if (colorFrom === \"actor-folder-color\") {\n\t\t\tborderColor = overrides.ACTOR_FOLDER_COLOR;\n\t\t} else {\n\t\t\t// colorFrom === 'custom-disposition'\n\t\t\tborderColor = overrides.CUSTOM_DISPOSITION;\n\t\t}\n\n\t\treturn borderColor;\n\t}\n\n\tstatic _drawBorderFaction(token, container) {\n\t\t//@ts-ignore\n\t\tif (!container && token.faction) {\n\t\t\t//@ts-ignore\n\t\t\tcontainer = token.faction;\n\t\t}\n\t\tif (!container) {\n\t\t\tdebug(`No container is founded or passed`);\n\t\t\treturn;\n\t\t}\n\t\tif (!token) {\n\t\t\tdebug(`No token is founded or passed`);\n\t\t\treturn;\n\t\t}\n\t\tif (token.x === 0 && token.y === 0) {\n\t\t\t//@ts-ignore\n\t\t\tif (token.document.x === 0 && token.document.y === 0) {\n\t\t\t\tdebug(`No token is founded or passed`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// // OLD FVTT 9\n\t\t// //@ts-ignore\n\t\t// container.children.forEach((c) => c.clear());\n\t\t// // container.removeChildren().forEach(c => c.destroy());\n\n\t\t// Some systems have special classes for factions, if we can't removeChildren,\n\t\t// then use the token's children and make sure to only remove the ones we created\n\t\t//@ts-ignore\n\t\tif (container.removeChildren) {\n\t\t\t//@ts-ignore\n\t\t\tcontainer.children.forEach((c) => c.clear());\n\t\t\t// container.removeChildren().forEach(c => c.destroy());\n\t\t}\n\t\t//@ts-ignore\n\t\telse if (token.removeChildren) {\n\t\t\ttoken.children.forEach((c) => {\n\t\t\t\t//@ts-ignore\n\t\t\t\tif (c.source === CONSTANTS.MODULE_NAME) {\n\t\t\t\t\tc.destroy();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst borderColor = TokenFactions.colorBorderFaction(token);\n\t\tif (!borderColor) {\n\t\t\treturn;\n\t\t}\n\t\tif (!borderColor.INT || Number.isNaN(borderColor.INT)) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (game.settings.get(CONSTANTS.MODULE_NAME, \"removeBorders\")) {\n\t\t\tcase \"0\":\n\t\t\t\tbreak;\n\t\t\tcase \"1\":\n\t\t\t\t//@ts-ignore\n\t\t\t\tif (!token.owner) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"2\":\n\t\t\t\treturn;\n\t\t}\n\n\t\t//@ts-ignore\n\t\tlet skipDraw;\n\t\ttry {\n\t\t\t//skipDraw = token.document.getFlag(\n\t\t\t//\tCONSTANTS.MODULE_NAME,\n\t\t\t//\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE\n\t\t\t//);\n\t\t\tskipDraw = getProperty(\n\t\t\t\ttoken.document,\n\t\t\t\t`flags.${CONSTANTS.MODULE_NAME}.${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE}`\n\t\t\t);\n\t\t} catch (e) {\n\t\t\t//@ts-ignore\n\t\t\ttoken.document.setFlag(CONSTANTS.MODULE_NAME, TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE, false);\n\t\t\tskipDraw = token.document.getFlag(\n\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE\n\t\t\t);\n\t\t}\n\t\t//@ts-ignore\n\t\tif (skipDraw) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst frameStyle = String(game.settings.get(CONSTANTS.MODULE_NAME, \"frame-style\"));\n\n\t\tif (frameStyle == TokenFactions.TOKEN_FACTIONS_FRAME_STYLE.FLAT) {\n\t\t\t// frameStyle === 'flat'\n\t\t\tconst fillTexture = game.settings.get(CONSTANTS.MODULE_NAME, \"fillTexture\");\n\t\t\tTokenFactions._drawBorder(token, borderColor, container, fillTexture);\n\t\t} else if (frameStyle == TokenFactions.TOKEN_FACTIONS_FRAME_STYLE.BELEVELED) {\n\t\t\t// frameStyle === 'bevelled'\n\t\t\tconst fillTexture = game.settings.get(CONSTANTS.MODULE_NAME, \"fillTexture\");\n\t\t\tconst frameWidth =\n\t\t\t\tcanvas.grid?.grid?.w *\n\t\t\t\t(game.settings.get(CONSTANTS.MODULE_NAME, \"borderWidth\") / 100);\n\n\t\t\t// BASE CONFIG\n\t\t\tlet t =\n\t\t\t\tgame.settings.get(CONSTANTS.MODULE_NAME, \"borderWidth\") || CONFIG.Canvas.objectBorderThickness;\n\t\t\tconst p = game.settings.get(CONSTANTS.MODULE_NAME, \"borderOffset\");\n\t\t\t//@ts-ignore\n\t\t\tif (game.settings.get(CONSTANTS.MODULE_NAME, \"permanentBorder\") && token._controlled) {\n\t\t\t\tt = t * 2;\n\t\t\t}\n\t\t\tconst sB = game.settings.get(CONSTANTS.MODULE_NAME, \"scaleBorder\");\n\t\t\tconst bS = game.settings.get(CONSTANTS.MODULE_NAME, \"borderGridScale\");\n\t\t\tconst nBS = bS ? (canvas.dimensions)?.size / 100 : 1;\n\t\t\t//@ts-ignore\n\t\t\tconst sX = sB ? token.document.texture.scaleX : 1;\n\t\t\t//@ts-ignore\n\t\t\tconst sY = sB ? token.document.texture.scaleY : 1;\n\t\t\tconst sW = sB ? (token.w - token.w * sX) / 2 : 0;\n\t\t\tconst sH = sB ? (token.h - token.h * sY) / 2 : 0;\n\n\t\t\tlet frameOpacity = game.settings.get(CONSTANTS.MODULE_NAME, \"frame-opacity\") || 0.5;\n\t\t\tlet baseOpacity = game.settings.get(CONSTANTS.MODULE_NAME, \"base-opacity\") || 0.5;\n\n\t\t\tconst customFrameOpacity = (\n\t\t\t\ttoken.document.getFlag(\n\t\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_FRAME_OPACITY\n\t\t\t\t)\n\t\t\t);\n\t\t\tconst customBaseOpacity = (\n\t\t\t\ttoken.document.getFlag(\n\t\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_BASE_OPACITY\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tif (customFrameOpacity && customFrameOpacity != 0.5) {\n\t\t\t\tframeOpacity = customFrameOpacity;\n\t\t\t}\n\t\t\tif (customBaseOpacity && customBaseOpacity != 0.5) {\n\t\t\t\tbaseOpacity = customBaseOpacity;\n\t\t\t}\n\n\t\t\tconst textureINT = borderColor.TEXTURE_INT || PIXI.Texture.EMPTY; //await PIXI.Texture.fromURL(token.document.texture.src) || PIXI.Texture.EMPTY;\n\t\t\tconst textureEX = borderColor.TEXTURE_EX || PIXI.Texture.EMPTY;\n\n\t\t\tconst h = Math.round(t / 2);\n\t\t\tconst o = Math.round(h / 2);\n\n\t\t\t// const ringTexture = new PIXI.Sprite(TokenFactions.bevelTexture);\n\t\t\t// ringTexture.tint = borderColor.INT;\n\t\t\t// ringTexture.alpha = frameOpacity;\n\t\t\t// container.addChild(ringTexture);\n\t\t\t// const factionBorder = new PIXI.Graphics();\n\t\t\t/*\n\t\t\tconst borderColorBeleveled = borderColor;\n\t\t\tborderColorBeleveled.TEXTURE_INT = TokenFactions.bevelTexture;\n\t\t\tborderColorBeleveled.TEXTURE_EX = TokenFactions.bevelGradient;\n\t\t\tTokenFactions._drawBorder(token, borderColorBeleveled, factionBorder, fillTexture);\n\t\t\t*/\n\t\t\t// ringTexture.mask = factionBorder;\n\n\t\t\tconst outerRing = TokenFactions._drawGradient(token, borderColor.INT, TokenFactions.bevelGradient);\n\t\t\tconst innerRing = TokenFactions._drawGradient(token, borderColor.INT, TokenFactions.bevelGradient);\n\t\t\tconst ringTexture = TokenFactions._drawTexture(token, borderColor.INT, TokenFactions.bevelTexture);\n\t\t\tconst outerRingMask = new PIXI.Graphics();\n\t\t\tconst innerRingMask = new PIXI.Graphics();\n\t\t\tconst ringTextureMask = new PIXI.Graphics();\n\n\t\t\touterRing.alpha = frameOpacity;\n\t\t\tinnerRing.alpha = frameOpacity;\n\t\t\tringTexture.alpha = frameOpacity;\n\n\t\t\tinnerRing.pivot.set(1000.0, 1000.0);\n\t\t\tinnerRing.angle = 180;\n\n\t\t\touterRingMask\n\t\t\t\t.lineStyle(h * nBS, borderColor.EX, 1.0)\n\t\t\t\t//@ts-ignore\n\t\t\t\t.beginFill(Color.from(0xffffff), 0.0)\n\t\t\t\t.drawCircle(token.w / 2, token.h / 2, token.w / 2)\n\t\t\t\t.endFill();\n\n\t\t\tinnerRingMask\n\t\t\t\t.lineStyle(h * nBS, borderColor.EX, 1.0)\n\t\t\t\t//@ts-ignore\n\t\t\t\t.beginFill(Color.from(0xffffff), 0.0)\n\t\t\t\t.drawCircle(token.w / 2, token.h / 2, token.w / 2 - frameWidth / 2)\n\t\t\t\t.endFill();\n\n\t\t\tringTextureMask\n\t\t\t\t.lineStyle(h * nBS, borderColor.EX, 1.0)\n\t\t\t\t//@ts-ignore\n\t\t\t\t.beginFill(Color.from(0xffffff), 0.0)\n\t\t\t\t.drawCircle(token.w / 2, token.h / 2, token.w / 2)\n\t\t\t\t.endFill();\n\n\t\t\t//@ts-ignore\n\t\t\ttoken.faction.addChild(outerRing);\n\t\t\t//@ts-ignore\n\t\t\ttoken.faction.addChild(outerRingMask);\n\t\t\touterRing.mask = outerRingMask;\n\t\t\t//@ts-ignore\n\t\t\ttoken.faction.addChild(innerRing);\n\t\t\t//@ts-ignore\n\t\t\ttoken.faction.addChild(innerRingMask);\n\t\t\tinnerRing.mask = innerRingMask;\n\t\t\t//@ts-ignore\n\t\t\ttoken.faction.addChild(ringTexture);\n\t\t\t//@ts-ignore\n\t\t\ttoken.faction.addChild(ringTextureMask);\n\t\t\tringTexture.mask = ringTextureMask;\n\n\t\t\t/*\n      const fillTexture = game.settings.get(CONSTANTS.MODULE_NAME, 'fillTexture');\n      if (fillTexture) {\n        // TODO FILL TEXTURE\n      }\n\n      const outerRing = new PIXI.Sprite(TokenFactions.bevelGradient);\n      outerRing.anchor.set(0.0, 0.0);\n      outerRing.width = token.w;\n      outerRing.height = token.h;\n      outerRing.tint = borderColor.INT;\n\n      const innerRing = new PIXI.Sprite(TokenFactions.bevelGradient);\n      innerRing.anchor.set(0.0, 0.0);\n      innerRing.width = token.w;\n      innerRing.height = token.h;\n      innerRing.tint = borderColor.INT;\n\n      const ringTexture = new PIXI.Sprite(TokenFactions.bevelTexture);\n      ringTexture.anchor.set(0.0, 0.0);\n      ringTexture.width = 400;\n      ringTexture.height = 400;\n      ringTexture.tint = borderColor.INT;\n\n      const outerRingMask = new PIXI.Graphics();\n      const innerRingMask = new PIXI.Graphics();\n      const ringTextureMask = new PIXI.Graphics();\n\n      outerRing.alpha = frameOpacity;\n      innerRing.alpha = frameOpacity;\n      ringTexture.alpha = frameOpacity;\n\n      innerRing.pivot.set(1000.0, 1000.0);\n      innerRing.angle = 180;\n\n      // outerRingMask\n      //   .lineStyle(t / 2, 0xffffff, 1.0, 0)\n      //   .beginFill(Color.from(0xffffff), 0.0)\n      //   .drawCircle(token.w / 2, token.h / 2, token.w / 2);\n\n      const borderColorOuterRingMask = borderColor;\n      borderColorOuterRingMask.INT = 0xffffff;\n      TokenFactions._drawBorder(token,borderColorOuterRingMask,outerRingMask,false);\n\n      // innerRingMask\n      //   .lineStyle(t / 2, 0xffffff, 1.0, 0)\n      //   .beginFill(Color.from(0xffffff), 0.0)\n      //   .drawCircle(token.w / 2, token.h / 2, token.w / 2 - t / 2);\n\n      const borderColorInnerRingMask = borderColor;\n      borderColorInnerRingMask.INT = 0xffffff;\n      TokenFactions._drawBorder(token,borderColorInnerRingMask,innerRingMask,false);\n\n      // ringTextureMask\n      //   .lineStyle(t, 0xffffff, 1.0, 0)\n      //   .beginFill(Color.from(0xffffff), 0.0)\n      //   .drawCircle(token.w / 2, token.h / 2, token.w / 2);\n\n      const borderColorRingTextureMask = borderColor;\n      borderColorRingTextureMask.INT = 0xffffff;\n      TokenFactions._drawBorder(token,borderColorRingTextureMask,ringTextureMask,false);\n\n      container.addChild(outerRing);\n      container.addChild(outerRingMask);\n      outerRing.mask = outerRingMask;\n\n      container.addChild(innerRing);\n      container.addChild(innerRingMask);\n      innerRing.mask = innerRingMask;\n\n      container.addChild(ringTexture);\n      container.addChild(ringTextureMask);\n      ringTexture.mask = ringTextureMask;\n      */\n\t\t\t//}else if(frameStyle == TOKEN_FACTIONS_FRAME_STYLE.BORDER){\n\t\t} else {\n\t\t\tconst fillTexture = game.settings.get(CONSTANTS.MODULE_NAME, \"fillTexture\");\n\t\t\tTokenFactions._drawBorder(token, borderColor, container, fillTexture);\n\t\t}\n\t\treturn container;\n\t}\n\n\tstatic _drawBorder(\n\t\ttoken,\n\t\tborderColor,\n\t\tcontainer,\n\t\tfillTexture\n\t) {\n\t\t// //@ts-ignore\n\t\t// const factionBorder = container.addChild(new PIXI.Graphics());\n\t\tconst factionBorder = new PIXI.Graphics();\n\n\t\t// If we cannot create an faction as a child of the token through factions field,\n\t\t// then do it through direct token's children while keeping track of which children we created\n\n\t\tif (container.addChild) {\n\t\t\tcontainer.addChild(factionBorder);\n\t\t}\n\t\t//@ts-ignore\n\t\telse if (token.addChild) {\n\t\t\t//@ts-ignore\n\t\t\tfactionBorder.source = CONSTANTS.MODULE_NAME;\n\t\t\ttoken.addChild(factionBorder);\n\t\t}\n\n\t\t//@ts-ignore\n\t\tif (canvas.interface.reverseMaskfilter) {\n\t\t\t//@ts-ignore\n\t\t\tfactionBorder.filters = [canvas.interface.reverseMaskfilter];\n\t\t}\n\t\t//@ts-ignore\n\t\t// factionBorder.zIndex = container.zIndex;\n\n\t\tlet t = game.settings.get(CONSTANTS.MODULE_NAME, \"borderWidth\") || CONFIG.Canvas.objectBorderThickness;\n\t\tconst p = game.settings.get(CONSTANTS.MODULE_NAME, \"borderOffset\");\n\t\t//@ts-ignore\n\t\tif (game.settings.get(CONSTANTS.MODULE_NAME, \"permanentBorder\") && token._controlled) {\n\t\t\tt = t * 2;\n\t\t}\n\t\tconst sB = game.settings.get(CONSTANTS.MODULE_NAME, \"scaleBorder\");\n\t\tconst bS = game.settings.get(CONSTANTS.MODULE_NAME, \"borderGridScale\");\n\t\tconst nBS = bS ? (canvas.dimensions)?.size / 100 : 1;\n\t\t//@ts-ignore\n\t\tconst sX = sB ? token.document.texture.scaleX : 1;\n\t\t//@ts-ignore\n\t\tconst sY = sB ? token.document.texture.scaleY : 1;\n\t\tconst sW = sB ? (token.w - token.w * sX) / 2 : 0;\n\t\tconst sH = sB ? (token.h - token.h * sY) / 2 : 0;\n\n\t\tconst s = sX;\n\t\t// const s: any = sB ? token.scale : 1;\n\t\t// const sW = sB ? (token.w - token.w * s) / 2 : 0;\n\t\t// const sH = sB ? (token.h - token.h * s) / 2 : 0;\n\n\t\tlet frameOpacity = game.settings.get(CONSTANTS.MODULE_NAME, \"frame-opacity\") || 0.5;\n\t\tlet baseOpacity = game.settings.get(CONSTANTS.MODULE_NAME, \"base-opacity\") || 0.5;\n\n\t\tconst customFrameOpacity = (\n\t\t\ttoken.document.getFlag(\n\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_FRAME_OPACITY\n\t\t\t)\n\t\t);\n\t\tconst customBaseOpacity = (\n\t\t\ttoken.document.getFlag(\n\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_CUSTOM_BASE_OPACITY\n\t\t\t)\n\t\t);\n\n\t\tif (customFrameOpacity && customFrameOpacity != 0.5) {\n\t\t\tframeOpacity = customFrameOpacity;\n\t\t}\n\t\tif (customBaseOpacity && customBaseOpacity != 0.5) {\n\t\t\tbaseOpacity = customBaseOpacity;\n\t\t}\n\n\t\tconst textureINT = borderColor.TEXTURE_INT || PIXI.Texture.EMPTY; //await PIXI.Texture.fromURL(token.document.texture.src) || PIXI.Texture.EMPTY;\n\t\tconst textureEX = borderColor.TEXTURE_EX || PIXI.Texture.EMPTY;\n\n\t\tfactionBorder.alpha = frameOpacity;\n\n\t\t// Draw Hex border for size 1 tokens on a hex grid\n\t\tconst gt = CONST.GRID_TYPES;\n\t\tconst hexTypes = [gt.HEXEVENQ, gt.HEXEVENR, gt.HEXODDQ, gt.HEXODDR];\n\n\t\tif (game.settings.get(CONSTANTS.MODULE_NAME, \"circleBorders\")) {\n\t\t\t// const p = game.settings.get(CONSTANTS.MODULE_NAME, \"borderOffset\");\n\t\t\tconst h = Math.round(t / 2);\n\t\t\tconst o = Math.round(h / 2);\n\n\t\t\tif (fillTexture) {\n\t\t\t\t//@ts-ignore\n\t\t\t\tfactionBorder\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t.beginFill(Color.from(borderColor.EX), baseOpacity)\n\t\t\t\t\t.lineStyle(t * nBS, borderColor.EX, 0.8)\n\t\t\t\t\t// .drawCircle(token.x + token.w / 2, token.y + token.h / 2, (token.w / 2) * sX + t + p)\n\t\t\t\t\t.drawCircle(token.w / 2, token.h / 2, (token.w / 2) * s + t + p)\n\t\t\t\t\t.beginTextureFill({ texture: textureEX, color: borderColor.EX, alpha: baseOpacity })\n\t\t\t\t\t.endFill();\n\t\t\t\t// .lineStyle(t*nBS, borderColor.EX, 0.8)\n\t\t\t\t// .drawCircle(token.w / 2, token.h / 2, (token.w / 2) * s + t + p);\n\n\t\t\t\t//@ts-ignore\n\t\t\t\tfactionBorder\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t.beginFill(Color.from(borderColor.INT), baseOpacity)\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t.lineStyle(h * nBS, Color.from(borderColor.INT), 1.0)\n\t\t\t\t\t// .drawCircle(token.x + token.w / 2, token.y + token.h / 2, (token.w / 2) * sX + h + t / 2 + p)\n\t\t\t\t\t.drawCircle(token.w / 2, token.h / 2, (token.w / 2) * s + h + t / 2 + p)\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t.beginTextureFill({ texture: textureINT, color: Color.from(borderColor.INT), alpha: baseOpacity })\n\t\t\t\t\t.endFill();\n\t\t\t\t// .lineStyle(h*nBS, Color.from(borderColor.INT), 1.0)\n\t\t\t\t// .drawCircle(token.w / 2, token.h / 2, (token.w / 2) * s + h + t / 2 + p);\n\t\t\t}\n\t\t\t//@ts-ignore\n\t\t\tfactionBorder\n\t\t\t\t.lineStyle(t * nBS, borderColor.EX, 0.8)\n\t\t\t\t// .drawCircle(token.x + token.w / 2, token.y + token.h / 2, (token.w / 2) * sX + t + p);\n\t\t\t\t.drawCircle(token.w / 2, token.h / 2, (token.w / 2) * s + t + p);\n\n\t\t\t//@ts-ignore\n\t\t\tfactionBorder\n\t\t\t\t//@ts-ignore\n\t\t\t\t.lineStyle(h * nBS, Color.from(borderColor.INT), 1.0)\n\t\t\t\t// .drawCircle(token.x + token.w / 2, token.y + token.h / 2, (token.w / 2) * sX + h + t / 2 + p);\n\t\t\t\t.drawCircle(token.w / 2, token.h / 2, (token.w / 2) * s + h + t / 2 + p);\n\t\t}\n\t\t//@ts-ignore\n\t\telse if (hexTypes.includes(canvas.grid?.type) && token.width === 1 && token.height === 1) {\n\t\t\t// const p = game.settings.get(CONSTANTS.MODULE_NAME, \"borderOffset\");\n\t\t\tconst q = Math.round(p / 2);\n\t\t\t//@ts-ignore\n\t\t\tconst polygon = canvas.grid?.grid?.getPolygon(\n\t\t\t\t-1.5 - q + sW,\n\t\t\t\t-1.5 - q + sH,\n\t\t\t\t(token.w + 2) * sX + p,\n\t\t\t\t(token.h + 2) * sY + p\n\t\t\t);\n\t\t\t//@ts-ignore\n\t\t\t// const polygon = canvas.grid?.grid?.getPolygon(\n\t\t\t// \t-1.5 - q + sW,\n\t\t\t// \t-1.5 - q + sH,\n\t\t\t// \t(token.w + 2) * s + p,\n\t\t\t// \t(token.h + 2) * s + p\n\t\t\t// );\n\n\t\t\tif (fillTexture) {\n\t\t\t\t//@ts-ignore\n\t\t\t\tfactionBorder\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t.beginFill(Color.from(borderColor.EX), baseOpacity)\n\t\t\t\t\t.lineStyle(t * nBS, borderColor.EX, 0.8)\n\t\t\t\t\t.drawPolygon(polygon)\n\t\t\t\t\t.beginTextureFill({ texture: textureEX, color: borderColor.EX, alpha: baseOpacity })\n\t\t\t\t\t.endFill();\n\t\t\t\t// .lineStyle(t*nBS, borderColor.EX, 0.8)\n\t\t\t\t// .drawPolygon(polygon);\n\n\t\t\t\t//@ts-ignore\n\t\t\t\tfactionBorder\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t.beginFill(Color.from(borderColor.INT), baseOpacity)\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t.lineStyle((t * nBS) / 2, Color.from(borderColor.INT), 1.0)\n\t\t\t\t\t.drawPolygon(polygon)\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t.beginTextureFill({ texture: textureINT, color: Color.from(borderColor.INT), alpha: baseOpacity })\n\t\t\t\t\t.endFill();\n\t\t\t\t// .lineStyle(t*nBS / 2, Color.from(borderColor.INT), 1.0)\n\t\t\t\t// .drawPolygon(polygon);\n\t\t\t}\n\t\t\t//@ts-ignore\n\t\t\tfactionBorder.lineStyle(t * nBS, borderColor.EX, 0.8).drawPolygon(polygon);\n\n\t\t\t//@ts-ignore\n\t\t\tfactionBorder.lineStyle((t * nBS) / 2, Color.from(borderColor.INT), 1.0).drawPolygon(polygon);\n\t\t}\n\n\t\t// Otherwise Draw Square border\n\t\telse {\n\t\t\t// const p = game.settings.get(CONSTANTS.MODULE_NAME, \"borderOffset\");\n\t\t\tconst q = Math.round(p / 2);\n\t\t\tconst h = Math.round(t / 2);\n\t\t\tconst o = Math.round(h / 2);\n\n\t\t\tif (fillTexture) {\n\t\t\t\t//@ts-ignore\n\t\t\t\tfactionBorder\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t.beginFill(Color.from(borderColor.EX), baseOpacity)\n\t\t\t\t\t.lineStyle(t * nBS, borderColor.EX, 0.8)\n\t\t\t\t\t// .drawRoundedRect(token.x, token.y, token.w, token.h, 3)\n\t\t\t\t\t.drawRoundedRect(-o - q + sW, -o - q + sH, (token.w + h) * s + p, (token.h + h) * s + p, 3)\n\t\t\t\t\t.beginTextureFill({ texture: textureEX, color: borderColor.EX, alpha: baseOpacity })\n\t\t\t\t\t.endFill();\n\t\t\t\t// .lineStyle(t*nBS, borderColor.EX, 0.8)\n\t\t\t\t// .drawRoundedRect(-o - q + sW, -o - q + sH, (token.w + h) * s + p, (token.h + h) * s + p, 3);\n\n\t\t\t\t//@ts-ignore\n\t\t\t\tfactionBorder\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t.beginFill(Color.from(borderColor.INT), baseOpacity)\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t.lineStyle(h * nBS, Color.from(borderColor.INT), 1.0)\n\t\t\t\t\t// .drawRoundedRect(token.x, token.y, token.w, token.h, 3)\n\t\t\t\t\t.drawRoundedRect(-o - q + sW, -o - q + sH, (token.w + h) * s + p, (token.h + h) * s + p, 3)\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t.beginTextureFill({ texture: textureINT, color: Color.from(borderColor.INT), alpha: baseOpacity })\n\t\t\t\t\t.endFill();\n\t\t\t\t// .lineStyle(h*nBS, Color.from(borderColor.INT), 1.0)\n\t\t\t\t// .drawRoundedRect(-o - q + sW, -o - q + sH, (token.w + h) * s + p, (token.h + h) * s + p, 3);\n\t\t\t}\n\t\t\t//@ts-ignore\n\t\t\tfactionBorder\n\t\t\t\t.lineStyle(t * nBS, borderColor.EX, 0.8)\n\t\t\t\t// .drawRoundedRect(token.x, token.y, token.w, token.h, 3);\n\t\t\t\t.drawRoundedRect(-o - q + sW, -o - q + sH, (token.w + h) * s + p, (token.h + h) * s + p, 3);\n\n\t\t\t//@ts-ignore\n\t\t\tfactionBorder\n\t\t\t\t//@ts-ignore\n\t\t\t\t.lineStyle(h * nBS, Color.from(borderColor.INT), 1.0)\n\t\t\t\t// .drawRoundedRect(token.x, token.y, token.w, token.h, 3);\n\t\t\t\t.drawRoundedRect(-o - q + sW, -o - q + sH, (token.w + h) * s + p, (token.h + h) * s + p, 3);\n\t\t}\n\t}\n\n\tstatic clearAllGridFaction() {\n\t\tconst tokens = canvas.tokens?.placeables;\n\t\tfor (const token of tokens) {\n\t\t\t//@ts-ignore\n\t\t\tif (token.faction) {\n\t\t\t\t//@ts-ignore\n\t\t\t\ttoken.faction.removeChildren().forEach((c) => c.destroy());\n\t\t\t}\n\t\t\tTokenFactions.clearGridFaction(token.id);\n\t\t}\n\t}\n\n\tstatic clearGridFaction(tokenId) {\n\t\t//@ts-ignore\n\t\tif (canvas?.grid?.faction) {\n\t\t\t//@ts-ignore\n\t\t\tconst factionBorder = canvas?.grid?.faction[tokenId];\n\t\t\t//@ts-ignore\n\t\t\tif (factionBorder && !factionBorder.destroyed) {\n\t\t\t\t//@ts-ignore\n\t\t\t\tfactionBorder.children.forEach((c) => {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tif (c && !c._destroyed) {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\tc.clear();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t//@ts-ignore\n\t\t\t\tfactionBorder?.destroy();\n\t\t\t\t//@ts-ignore\n\t\t\t\tdelete canvas?.grid?.faction[tokenId];\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic _drawGradient(token, color, bevelGradient) {\n\t\tconst bg = new PIXI.Sprite(bevelGradient);\n\n\t\tbg.anchor.set(0.0, 0.0);\n\t\tbg.width = token.w;\n\t\tbg.height = token.h;\n\t\tbg.tint = color;\n\t\t// bg.x = token.x;\n\t\t// bg.y = token.y;\n\n\t\treturn bg;\n\t}\n\n\tstatic _drawTexture(token, color, bevelTexture) {\n\t\tconst bg = new PIXI.Sprite(bevelTexture);\n\n\t\tbg.anchor.set(0.0, 0.0);\n\t\tbg.width = 400;\n\t\tbg.height = 400;\n\t\tbg.tint = color;\n\t\t// bg.x = token.x;\n\t\t// bg.y = token.y;\n\n\t\treturn bg;\n\t}\n}\n","import CONSTANTS from \"./constants.mjs\";\nimport { error, isStringEquals, warn } from \"./lib/lib.mjs\";\nimport { TokenFactions } from \"./tokenFactions.mjs\";\n\nconst API = {\n\tasync disableDrawBorderFactionsFromTokens(tokenIdsOrNames) {\n\t\tfor (const tokenIdOrName of tokenIdsOrNames) {\n\t\t\tthis.disableDrawBorderFactionsFromToken(tokenIdOrName);\n\t\t}\n\t},\n\n\tasync disableDrawBorderFactionsFromToken(tokenIdOrName) {\n\t\tconst token = canvas.tokens?.placeables.find((t) => {\n\t\t\treturn isStringEquals(t.id, tokenIdOrName) || isStringEquals(t.name, tokenIdOrName);\n\t\t});\n\t\tif (!token) {\n\t\t\twarn(`No token is been found with reference '${tokenIdOrName}'`, true);\n\t\t\treturn;\n\t\t}\n\t\t//@ts-ignore\n\t\tawait token.document.setFlag(CONSTANTS.MODULE_NAME, TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE, true);\n\t},\n\n\tasync enableDrawBorderFactionsFromTokens(tokenIdsOrNames) {\n\t\tfor (const tokenIdOrName of tokenIdsOrNames) {\n\t\t\tthis.enableDrawBorderFactionsFromToken(tokenIdOrName);\n\t\t}\n\t},\n\n\tasync enableDrawBorderFactionsFromToken(tokenIdOrName) {\n\t\tconst token = canvas.tokens?.placeables.find((t) => {\n\t\t\treturn isStringEquals(t.id, tokenIdOrName) || isStringEquals(t.name, tokenIdOrName);\n\t\t});\n\t\tif (!token) {\n\t\t\twarn(`No token is been found with reference '${tokenIdOrName}'`, true);\n\t\t\treturn;\n\t\t}\n\t\t//@ts-ignore\n\t\tawait token.document.setFlag(CONSTANTS.MODULE_NAME, TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE, false);\n\t},\n\n\tasync retrieveBorderFactionsColorFromToken(tokenIdOrName) {\n\t\tconst token = canvas.tokens?.placeables.find((t) => {\n\t\t\treturn isStringEquals(t.id, tokenIdOrName) || isStringEquals(t.name, tokenIdOrName);\n\t\t});\n\n\t\tconst factionGraphicDefaultS = \"#000000\";\n\n\t\tif (!token) {\n\t\t\twarn(`No token is been found with reference '${tokenIdOrName}'`, true);\n\t\t\treturn factionGraphicDefaultS;\n\t\t}\n\n\t\tconst borderColor = TokenFactions.colorBorderFaction(token);\n\n\t\tif (!borderColor) {\n\t\t\treturn factionGraphicDefaultS;\n\t\t}\n\t\tif (!borderColor.INT || Number.isNaN(borderColor.INT)) {\n\t\t\treturn factionGraphicDefaultS;\n\t\t}\n\t\tswitch (game.settings.get(CONSTANTS.MODULE_NAME, \"removeBorders\")) {\n\t\t\tcase \"0\": {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"1\": {\n\t\t\t\t//@ts-ignore\n\t\t\t\tif (!token.owner) {\n\t\t\t\t\treturn factionGraphicDefaultS;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"2\": {\n\t\t\t\treturn factionGraphicDefaultS;\n\t\t\t}\n\t\t}\n\n\t\t//@ts-ignore\n\t\tlet skipDraw;\n\t\ttry {\n\t\t\tskipDraw = token.document.getFlag(\n\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE\n\t\t\t);\n\t\t} catch (e) {\n\t\t\t//@ts-ignore\n\t\t\tawait token.document.setFlag(\n\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tskipDraw = token.document.getFlag(\n\t\t\t\tCONSTANTS.MODULE_NAME,\n\t\t\t\tTokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE\n\t\t\t);\n\t\t}\n\t\t//@ts-ignore\n\t\tif (skipDraw) {\n\t\t\treturn factionGraphicDefaultS;\n\t\t}\n\t\treturn borderColor.INT_S;\n\t},\n\n\tasync clearAllGridFaction() {\n\t\tTokenFactions.clearAllGridFaction();\n\t},\n\n\tasync clearGridFaction(tokenId) {\n\t\tTokenFactions.clearGridFaction(tokenId);\n\t},\n\n\tclearGridFactionArr(...inAttributes) {\n\t\tif (!Array.isArray(inAttributes)) {\n\t\t\tthrow error(\"clearGridFactionArr | inAttributes must be of type array\");\n\t\t}\n\t\tconst [tokenId] = inAttributes;\n\t\tthis.clearGridFaction(tokenId);\n\t}\n};\n\nexport default API;\n","import { warn, error, debug, i18n, advancedLosTestInLos, getOwnedTokens } from \"./lib/lib.mjs\";\nimport { TokenFactions } from \"./tokenFactions.mjs\";\nimport CONSTANTS from \"./constants.mjs\";\nimport { setApi } from \"../main.mjs\";\nimport API from \"./api.mjs\";\n// import { registerSocket, tokenFactionsSocket } from \"./socket\";\n\nexport const initHooks = async () => {\n\twarn(\"Init Hooks processing\");\n\tTokenFactions.onInit();\n\n\t// Hooks.once(\"socketlib.ready\", registerSocket);\n\t// registerSocket();\n\n\tHooks.on(\"renderSettingsConfig\", (app, el, data) => {\n\t\tconst nC = game.settings.get(CONSTANTS.MODULE_NAME, \"neutralColor\");\n\t\tconst fC = game.settings.get(CONSTANTS.MODULE_NAME, \"friendlyColor\");\n\t\tconst hC = game.settings.get(CONSTANTS.MODULE_NAME, \"hostileColor\");\n\t\tconst cC = game.settings.get(CONSTANTS.MODULE_NAME, \"controlledColor\");\n\t\tconst pC = game.settings.get(CONSTANTS.MODULE_NAME, \"partyColor\");\n\t\tconst nCE = game.settings.get(CONSTANTS.MODULE_NAME, \"neutralColorEx\");\n\t\tconst fCE = game.settings.get(CONSTANTS.MODULE_NAME, \"friendlyColorEx\");\n\t\tconst hCE = game.settings.get(CONSTANTS.MODULE_NAME, \"hostileColorEx\");\n\t\tconst cCE = game.settings.get(CONSTANTS.MODULE_NAME, \"controlledColorEx\");\n\t\tconst pCE = game.settings.get(CONSTANTS.MODULE_NAME, \"partyColorEx\");\n\t\tconst afCE = game.settings.get(CONSTANTS.MODULE_NAME, \"actorFolderColorEx\");\n\t\tconst cdCE = game.settings.get(CONSTANTS.MODULE_NAME, \"customDispositionColorEx\");\n\n\t\tel.find('[name=\"token-factions.neutralColor\"]')\n\t\t\t.parent()\n\t\t\t.append(`<input type=\"color\" value=\"${nC}\" data-edit=\"token-factions.neutralColor\">`);\n\t\tel.find('[name=\"token-factions.friendlyColor\"]')\n\t\t\t.parent()\n\t\t\t.append(`<input type=\"color\" value=\"${fC}\" data-edit=\"token-factions.friendlyColor\">`);\n\t\tel.find('[name=\"token-factions.hostileColor\"]')\n\t\t\t.parent()\n\t\t\t.append(`<input type=\"color\" value=\"${hC}\" data-edit=\"token-factions.hostileColor\">`);\n\t\tel.find('[name=\"token-factions.controlledColor\"]')\n\t\t\t.parent()\n\t\t\t.append(`<input type=\"color\" value=\"${cC}\" data-edit=\"token-factions.controlledColor\">`);\n\t\tel.find('[name=\"token-factions.partyColor\"]')\n\t\t\t.parent()\n\t\t\t.append(`<input type=\"color\" value=\"${pC}\" data-edit=\"token-factions.partyColor\">`);\n\n\t\tel.find('[name=\"token-factions.neutralColorEx\"]')\n\t\t\t.parent()\n\t\t\t.append(`<input type=\"color\" value=\"${nCE}\" data-edit=\"token-factions.neutralColorEx\">`);\n\t\tel.find('[name=\"token-factions.friendlyColorEx\"]')\n\t\t\t.parent()\n\t\t\t.append(`<input type=\"color\" value=\"${fCE}\" data-edit=\"token-factions.friendlyColorEx\">`);\n\t\tel.find('[name=\"token-factions.hostileColorEx\"]')\n\t\t\t.parent()\n\t\t\t.append(`<input type=\"color\" value=\"${hCE}\" data-edit=\"token-factions.hostileColorEx\">`);\n\t\tel.find('[name=\"token-factions.controlledColorEx\"]')\n\t\t\t.parent()\n\t\t\t.append(`<input type=\"color\" value=\"${cCE}\" data-edit=\"token-factions.controlledColorEx\">`);\n\t\tel.find('[name=\"token-factions.partyColorEx\"]')\n\t\t\t.parent()\n\t\t\t.append(`<input type=\"color\" value=\"${pCE}\" data-edit=\"token-factions.partyColorEx\">`);\n\n\t\tel.find('[name=\"token-factions.actorFolderColorEx\"]')\n\t\t\t.parent()\n\t\t\t.append(`<input type=\"color\" value=\"${afCE}\" data-edit=\"token-factions.actorFolderColorEx\">`);\n\t\tel.find('[name=\"token-factions.customDispositionColorEx\"]')\n\t\t\t.parent()\n\t\t\t.append(`<input type=\"color\" value=\"${cdCE}\" data-edit=\"token-factions.customDispositionColorEx\">`);\n\t});\n\n\tif (game.settings.get(CONSTANTS.MODULE_NAME, \"tokenFactionsEnabled\")) {\n\t\t// setup all the hooks\n\n\t\tHooks.on(\"closeSettingsConfig\", (token, data) => {\n\t\t\tTokenFactions.updateTokensAll();\n\t\t});\n\n\t\tHooks.on(\"renderTokenConfig\", (config, html) => {\n\t\t\tTokenFactions.renderTokenConfig(config, html);\n\t\t});\n\n\t\tHooks.on(\"renderSettingsConfig\", (sheet, html) => {\n\t\t\tTokenFactions.updateTokensAll();\n\t\t});\n\n\t\tHooks.on(\"updateActor\", (actor, data) => {\n\t\t\t// TokenFactions.updateTokenDataFaction(actor);\n\t\t\t// token?.refresh();\n\t\t\tif (\n\t\t\t\thasProperty(data, \"flags\") &&\n\t\t\t\thasProperty(\n\t\t\t\t\tdata.flags[CONSTANTS.MODULE_NAME],\n\t\t\t\t\t`${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE}`\n\t\t\t\t) &&\n\t\t\t\tgetProperty(data.flags[CONSTANTS.MODULE_NAME], `${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE}`)\n\t\t\t) {\n\t\t\t\t// DO NOTHING\n\t\t\t} else {\n\t\t\t\tTokenFactions.updateTokenFaction(actor.token);\n\t\t\t}\n\t\t});\n\n\t\tHooks.on(\"updateToken\", (tokenDocument, data) => {\n\t\t\t//TokenFactions.updateTokenDataFaction(tokenDocument);\n\t\t\t// token?.refresh();\n\t\t\tif (\n\t\t\t\thasProperty(data, \"flags\") &&\n\t\t\t\thasProperty(\n\t\t\t\t\tdata.flags[CONSTANTS.MODULE_NAME],\n\t\t\t\t\t`${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE}`\n\t\t\t\t) &&\n\t\t\t\tgetProperty(data.flags[CONSTANTS.MODULE_NAME], `${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE}`)\n\t\t\t) {\n\t\t\t\t// DO NOTHING\n\t\t\t} else {\n\t\t\t\tTokenFactions.updateTokenFaction(actor);\n\t\t\t}\n\t\t});\n\n\t\tHooks.on(\"updateFolder\", (folder, data) => {\n\t\t\tTokenFactions.updateTokenDataFaction(actor);\n\t\t});\n\n\t\t// Hooks.on('preUpdateActor', (actor, updateData) => {\n\t\t//   TokenFactions._applyFactions(actor, updateData);\n\t\t// });\n\t\t// Hooks.on('preUpdateToken', (tokenDocument, updateData) => {\n\t\t//   TokenFactions._applyFactions(tokenDocument,updateData);\n\t\t// });\n\n\t\t//@ts-ignore\n\t\tlibWrapper.register(CONSTANTS.MODULE_NAME, \"Token.prototype.refresh\", TokenPrototypeRefreshHandler, \"MIXED\");\n\n\t\t//@ts-ignore\n\t\tlibWrapper.register(CONSTANTS.MODULE_NAME, \"Token.prototype.draw\", TokenPrototypeDrawHandler, \"MIXED\");\n\n\t\t//@ts-ignore\n\t\tlibWrapper.register(CONSTANTS.MODULE_NAME, \"Token.prototype._onUpdate\", TokenPrototypeOnUpdateHandler, \"MIXED\");\n\n\t\t//@ts-ignore\n\t\tlibWrapper.register(CONSTANTS.MODULE_NAME, \"Actor.prototype._onUpdate\", ActorPrototypeOnUpdateHandler, \"MIXED\");\n\n\t\tHooks.on(\"renderTokenHUD\", (app, html, data) => {\n\t\t\tTokenFactions.AddBorderToggle(app, html, data);\n\t\t});\n\n\t\t// Hooks.on(\"createToken\", (data) => {\n\t\t// \tconst token = canvas.tokens?.get(data.id);\n\t\t// \tif (!token.owner) {\n\t\t// \t\ttoken.cursor = \"default\";\n\t\t// \t}\n\t\t// });\n\n\t\t// Hooks.on(\"canvasReady\", () => {\n\t\t// \tcanvas.tokens?.placeables.forEach((t) => {\n\t\t// \t\tt.draw();\n\t\t// \t});\n\t\t// });\n\n\t\t// Hooks.on(\"refreshToken\", (token, options) => {\n\t\t// \tTokenFactions.updateTokenDataFaction(token.document);\n\t\t// });\n\n\t\t// canvas.tokens?.placeables.forEach((t) => {\n\t\t// \tif (!t.owner) {\n\t\t// \t\tt.cursor = \"default\";\n\t\t// \t}\n\t\t// });\n\n\t\tif (!TokenFactions.bevelGradient || !TokenFactions.bevelGradient.baseTexture) {\n\t\t\tTokenFactions.bevelGradient = (\n\t\t\t\tawait loadTexture(`modules/${CONSTANTS.MODULE_NAME}/assets/bevel-gradient.jpg`)\n\t\t\t);\n\t\t\tTokenFactions.bevelTexture = (\n\t\t\t\tawait loadTexture(`modules/${CONSTANTS.MODULE_NAME}/assets/bevel-texture.png`)\n\t\t\t);\n\t\t}\n\t}\n};\n\nexport const setupHooks = async () => {\n\tsetApi(API);\n};\n\nexport const readyHooks = () => {\n\t// DO NOTHING\n\tHooks.on(\"deleteToken\", async (tokenDocument, data, updateData) => {\n\t\tconst isPlayerOwned = tokenDocument.isOwner;\n\t\tif (!game.user?.isGM && !isPlayerOwned) {\n\t\t\treturn;\n\t\t}\n\t\tTokenFactions.clearGridFaction(tokenDocument.id);\n\t\t// tokenFactionsSocket.executeAsGM(\"clearGridFaction\", tokenDocument.id);\n\t});\n};\n\nexport const TokenPrototypeRefreshHandler = function (wrapped, ...args) {\n\tconst tokenDocument = this;\n\tTokenFactions.updateTokenDataFaction(tokenDocument);\n\treturn wrapped(...args);\n};\n\nexport const TokenPrototypeDrawHandler = function (wrapped, ...args) {\n\tconst token = this;\n\tTokenFactions.updateTokenDataFaction(token.document);\n\t// this.drawFactions();\n\treturn wrapped(...args);\n};\n\nexport const TokenPrototypeOnUpdateHandler = function (wrapped, ...args) {\n\tif (\n\t\thasProperty(args[0], \"flags\") &&\n\t\thasProperty(args[0].flags[CONSTANTS.MODULE_NAME], `${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE}`) &&\n\t\tgetProperty(args[0].flags[CONSTANTS.MODULE_NAME], `${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE}`)\n\t) {\n\t\t// DO NOTHING\n\t} else {\n\t\tconst token = this;\n\t\tTokenFactions.updateTokenDataFaction(token.document);\n\t}\n\treturn wrapped(...args);\n};\n\nexport const ActorPrototypeOnUpdateHandler = function (wrapped, ...args) {\n\tif (\n\t\thasProperty(args[0], \"flags\") &&\n\t\thasProperty(args[0].flags[CONSTANTS.MODULE_NAME], `${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE}`) &&\n\t\tgetProperty(args[0].flags[CONSTANTS.MODULE_NAME], `${TokenFactions.TOKEN_FACTIONS_FLAGS.FACTION_DISABLE}`)\n\t) {\n\t\t// DO NOTHING\n\t} else {\n\t\tconst actor = this;\n\t\t//@ts-ignore\n\t\tTokenFactions.updateTokenDataFaction(actor.prototypeToken.document);\n\t}\n\treturn wrapped(...args);\n};\n\n// export const TokenPrototypeRefreshBorderHandler = function (wrapped, ...args) {\n//   //@ts-ignore\n//   const token: Token = this as Token;\n//   //@ts-ignore\n//   TokenFactions.updateTokenDataFaction(token.document);\n//   return wrapped(args);\n// };\n\n// export const TokenPrototypeGetBorderColorHandler = function (wrapped, ...args) {\n//   //@ts-ignore\n//   const token: Token = this as Token;\n//   return TokenFactions.updateTokenDataFaction(token.document);\n//   //return wrapped(args);\n// };\n\n//@ts-ignore\n// Token.prototype.drawFactions = function () {\n//   const token = this as Token;\n//   TokenFactions.updateTokenDataFaction(token.document);\n// };\n","/**\n * This is your TypeScript entry file for Foundry VTT.\n * Register custom settings, sheets, and constants using the Foundry API.\n * Change this heading to be more descriptive to your module, or remove it.\n * Author: [your name]\n * Content License: [copyright and-or license] If using an existing system\n * \t\t\t\t\tyou may want to put a (link to a) license or copyright\n * \t\t\t\t\tnotice here (e.g. the OGL).\n * Software License: [your license] Put your desired license here, which\n * \t\t\t\t\t determines how others may use and modify your module\n */\n// Import JavaScript modules\n\n// Import TypeScript modules\nimport { registerSettings } from \"./scripts/settings.mjs\";\nimport { initHooks, readyHooks, setupHooks } from \"./scripts/module.mjs\";\nimport CONSTANTS from \"./scripts/constants.mjs\";\nimport API from \"./scripts/api.mjs\";\nimport { error } from \"./scripts/lib/lib.mjs\";\n\n/* ------------------------------------ */\n/* Initialize module\t\t\t\t\t*/\n/* ------------------------------------ */\nHooks.once(\"init\", () => {\n\tconsole.log(`${CONSTANTS.MODULE_NAME} | Initializing ${CONSTANTS.MODULE_NAME}`);\n\n\t// Do anything once the module is ready\n\tif (!game.modules.get(\"lib-wrapper\")?.active && game.user?.isGM) {\n\t\tlet word = \"install and activate\";\n\t\tif (game.modules.get(\"lib-wrapper\")) word = \"activate\";\n\t\tthrow error(`Requires the 'libWrapper' module. Please ${word} it.`);\n\t}\n\n\t// Register custom module settings\n\tregisterSettings();\n\n\tinitHooks();\n\t//readyHooks();\n\n\t// Assign custom classes and constants here\n\n\t// Register custom module settings\n\t//registerSettings();\n\t//fetchParams();\n\n\t// Preload Handlebars templates\n\t// await preloadTemplates();\n\t// Register custom sheets (if any)\n});\n\n/* ------------------------------------ */\n/* Setup module\t\t\t\t\t\t\t*/\n/* ------------------------------------ */\nHooks.once(\"setup\", function () {\n\t// Do anything after initialization but before ready\n\t//setupModules();\n\n\tsetupHooks();\n\n\t//registerSettings();\n});\n\n/* ------------------------------------ */\n/* When ready\t\t\t\t\t\t\t*/\n/* ------------------------------------ */\nHooks.once(\"ready\", () => {\n\t// if (!game.modules.get(\"socketLib\")?.active && game.user?.isGM) {\n\t// \tlet word = \"install and activate\";\n\t// \tif (game.modules.get(\"socketLib\")) word = \"activate\";\n\t// \tthrow error(`Requires the 'socketLib' module. Please ${word} it.`);\n\t// }\n\t// Do anything once the module is ready\n\treadyHooks();\n});\n\n// Add any additional hooks if necessary\n\n/**\n * Initialization helper, to set API.\n * @param api to set to game module.\n */\nexport function setApi(api) {\n\tconst data = game.modules.get(CONSTANTS.MODULE_NAME);\n\tdata.api = api;\n}\n\n/**\n * Returns the set API.\n * @returns Api from games module.\n */\nexport function getApi() {\n\tconst data = game.modules.get(CONSTANTS.MODULE_NAME);\n\treturn data.api;\n}\n\n/**\n * Initialization helper, to set Socket.\n * @param socket to set to game module.\n */\nexport function setSocket(socket) {\n\tconst data = game.modules.get(CONSTANTS.MODULE_NAME);\n\tdata.socket = socket;\n}\n\n/*\n * Returns the set socket.\n * @returns Socket from games module.\n */\nexport function getSocket() {\n\tconst data = game.modules.get(CONSTANTS.MODULE_NAME);\n\treturn data.socket;\n}\n"],"names":["error","tokenDoc","token","actor"],"mappings":"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"}